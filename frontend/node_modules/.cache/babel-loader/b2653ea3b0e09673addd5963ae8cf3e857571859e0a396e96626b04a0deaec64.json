{"ast":null,"code":"var _jsxFileName = \"E:\\\\TraeProjects\\\\DevelopmentDashboard\\\\frontend\\\\src\\\\components\\\\Header.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport './Header.css';\nimport { useState, useEffect, useRef } from 'react';\nimport { getYears, getMonthsByYear, getPhasesByYearAndMonth, checkYearMonthPhaseExists, createTaskCircle, getLatestTaskCircle } from '../services/taskCircleService.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Header({\n  onYearMonthPhaseChange,\n  loading\n}) {\n  _s();\n  // 状态管理\n  const [years, setYears] = useState([]);\n  const [months, setMonths] = useState([]);\n  const [phases, setPhases] = useState([]);\n  const [selectedYear, setSelectedYear] = useState('');\n  const [selectedMonth, setSelectedMonth] = useState('');\n  const [selectedPhase, setSelectedPhase] = useState('');\n  const [yearInput, setYearInput] = useState('');\n  const [monthInput, setMonthInput] = useState('');\n  const [phaseInput, setPhaseInput] = useState('');\n  const [isAddPlanEnabled, setIsAddPlanEnabled] = useState(false);\n  const [showYearDropdown, setShowYearDropdown] = useState(false);\n  const [showMonthDropdown, setShowMonthDropdown] = useState(false);\n  const [showPhaseDropdown, setShowPhaseDropdown] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n\n  // 引用\n  const yearRef = useRef(null);\n  const monthRef = useRef(null);\n  const phaseRef = useRef(null);\n\n  // 组件加载时获取年份和最新的task_circle数据\n  useEffect(() => {\n    const fetchData = async () => {\n      setIsLoading(true);\n      try {\n        // 获取年份列表\n        const yearsData = await getYears();\n        setYears(yearsData);\n\n        // 获取最新的task_circle数据\n        const latestData = await getLatestTaskCircle();\n        if (latestData) {\n          setSelectedYear(latestData.year);\n          setYearInput(latestData.year);\n          setSelectedMonth(latestData.month);\n          setMonthInput(latestData.month);\n          setSelectedPhase(latestData.phase);\n          setPhaseInput(latestData.phase);\n\n          // 通知父组件更新数据\n          if (onYearMonthPhaseChange) {\n            onYearMonthPhaseChange(latestData.year, latestData.month, latestData.phase);\n          }\n\n          // 加载月份和阶段\n          if (latestData.year) {\n            const monthsData = await getMonthsByYear(latestData.year);\n            setMonths(monthsData);\n            if (latestData.month) {\n              const phasesData = await getPhasesByYearAndMonth(latestData.year, latestData.month);\n              setPhases(phasesData);\n            }\n          }\n        }\n      } catch (error) {\n        console.error('获取数据失败:', error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchData();\n  }, [onYearMonthPhaseChange]);\n\n  // 监听年份变化，更新月份\n  useEffect(() => {\n    if (selectedYear) {\n      const fetchMonths = async () => {\n        setIsLoading(true);\n        try {\n          const data = await getMonthsByYear(selectedYear);\n          setMonths(data);\n          setSelectedMonth('');\n          setPhases([]);\n          setSelectedPhase('');\n        } catch (error) {\n          console.error('获取月份列表失败:', error);\n        } finally {\n          setIsLoading(false);\n        }\n      };\n      fetchMonths();\n    } else {\n      setMonths([]);\n      setPhases([]);\n    }\n  }, [selectedYear]);\n\n  // 监听月份变化，更新阶段\n  useEffect(() => {\n    if (selectedYear && selectedMonth) {\n      const fetchPhases = async () => {\n        setIsLoading(true);\n        try {\n          const data = await getPhasesByYearAndMonth(selectedYear, selectedMonth);\n          setPhases(data);\n          setSelectedPhase('');\n        } catch (error) {\n          console.error('获取阶段列表失败:', error);\n        } finally {\n          setIsLoading(false);\n        }\n      };\n      fetchPhases();\n    } else if (selectedYear) {\n      setPhases([]);\n    }\n  }, [selectedYear, selectedMonth]);\n\n  // 监听输入变化，检查是否存在匹配数据\n  useEffect(() => {\n    if (yearInput && monthInput && phaseInput) {\n      const checkExists = async () => {\n        try {\n          console.log('检查数据是否存在:', yearInput, monthInput, phaseInput);\n          const exists = await checkYearMonthPhaseExists(yearInput, monthInput, phaseInput);\n          console.log('数据存在结果:', exists);\n          // 只有当数据不存在时才启用按钮\n          setIsAddPlanEnabled(!exists);\n          console.log('按钮状态:', !exists);\n        } catch (error) {\n          console.error('检查年月阶段失败:', error);\n          // 发生错误时禁用按钮\n          setIsAddPlanEnabled(false);\n        }\n      };\n      checkExists();\n    } else {\n      setIsAddPlanEnabled(false);\n      console.log('输入不完整，禁用按钮');\n    }\n  }, [yearInput, monthInput, phaseInput]);\n\n  // 处理增加计划按钮点击\n  const handleAddPlan = async () => {\n    if (isAddPlanEnabled) {\n      try {\n        setIsLoading(true);\n        await createTaskCircle(yearInput, monthInput, phaseInput);\n        // 成功后提示用户\n        alert('计划已成功添加！');\n        // 刷新年份列表\n        const data = await getYears();\n        setYears(data);\n\n        // 通知父组件更新数据\n        if (onYearMonthPhaseChange) {\n          onYearMonthPhaseChange(yearInput, monthInput, phaseInput);\n        }\n      } catch (error) {\n        console.error('添加计划失败:', error);\n        alert('添加计划失败，请稍后再试。');\n      } finally {\n        setIsLoading(false);\n      }\n    }\n  };\n\n  // 点击空白处关闭下拉菜单\n  useEffect(() => {\n    const handleClickOutside = event => {\n      if (yearRef.current && !yearRef.current.contains(event.target)) {\n        setShowYearDropdown(false);\n      }\n      if (monthRef.current && !monthRef.current.contains(event.target)) {\n        setShowMonthDropdown(false);\n      }\n      if (phaseRef.current && !phaseRef.current.contains(event.target)) {\n        setShowPhaseDropdown(false);\n      }\n    };\n    document.addEventListener('mousedown', handleClickOutside);\n    return () => {\n      document.removeEventListener('mousedown', handleClickOutside);\n    };\n  }, []);\n\n  // 处理年份选择\n  const handleYearSelect = year => {\n    setSelectedYear(year);\n    setYearInput(year);\n    setShowYearDropdown(false);\n\n    // 通知父组件更新数据\n    if (onYearMonthPhaseChange && year && selectedMonth && selectedPhase) {\n      onYearMonthPhaseChange(year, selectedMonth, selectedPhase);\n    }\n  };\n\n  // 处理月份选择\n  const handleMonthSelect = month => {\n    setSelectedMonth(month);\n    setMonthInput(month);\n    setShowMonthDropdown(false);\n\n    // 通知父组件更新数据\n    if (onYearMonthPhaseChange && selectedYear && month && selectedPhase) {\n      onYearMonthPhaseChange(selectedYear, month, selectedPhase);\n    }\n  };\n\n  // 处理阶段选择\n  const handlePhaseSelect = phase => {\n    setSelectedPhase(phase);\n    setPhaseInput(phase);\n    setShowPhaseDropdown(false);\n\n    // 通知父组件更新数据\n    if (onYearMonthPhaseChange && selectedYear && selectedMonth && phase) {\n      onYearMonthPhaseChange(selectedYear, selectedMonth, phase);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"header-container\",\n    children: [isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading-overlay\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading-spinner\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"title-wrapper\",\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"title\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dropdown-container\",\n          ref: yearRef,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"\\u5E74\",\n            value: yearInput,\n            onChange: e => {\n              setYearInput(e.target.value);\n              setSelectedYear('');\n            },\n            onClick: () => setShowYearDropdown(!showYearDropdown),\n            disabled: isLoading\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 250,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"label\",\n            children: \"\\u5E74\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 261,\n            columnNumber: 13\n          }, this), showYearDropdown && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"dropdown\",\n            children: years.map(year => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"dropdown-item\",\n              onClick: () => handleYearSelect(year),\n              children: year\n            }, year, false, {\n              fileName: _jsxFileName,\n              lineNumber: 265,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 263,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dropdown-container\",\n          ref: monthRef,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"\\u6708\",\n            value: monthInput,\n            onChange: e => {\n              setMonthInput(e.target.value);\n              setSelectedMonth('');\n            },\n            onClick: () => setShowMonthDropdown(!showMonthDropdown),\n            disabled: isLoading\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 277,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"label\",\n            children: \"\\u6708\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 288,\n            columnNumber: 13\n          }, this), showMonthDropdown && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"dropdown\",\n            children: months.map(month => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"dropdown-item\",\n              onClick: () => handleMonthSelect(month),\n              children: month\n            }, month, false, {\n              fileName: _jsxFileName,\n              lineNumber: 292,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 290,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 276,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dropdown-container\",\n          ref: phaseRef,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"\\u9636\\u6BB5\",\n            value: phaseInput,\n            onChange: e => {\n              setPhaseInput(e.target.value);\n              setSelectedPhase('');\n            },\n            onClick: () => setShowPhaseDropdown(!showPhaseDropdown),\n            disabled: isLoading\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 304,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"label\",\n            children: \"\\u9636\\u6BB5\\u9879\\u76EE\\u4EA4\\u4ED8\\u53CA\\u4EA7\\u54C1\\u7814\\u53D1\\u8BA1\\u5212\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 315,\n            columnNumber: 13\n          }, this), showPhaseDropdown && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"dropdown\",\n            children: phases.map(phase => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"dropdown-item\",\n              onClick: () => handlePhaseSelect(phase),\n              children: [\"\\u7B2C\", phase, \"\\u9636\\u6BB5\"]\n            }, phase, true, {\n              fileName: _jsxFileName,\n              lineNumber: 319,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 317,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 303,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"add-plan\",\n      onClick: handleAddPlan,\n      disabled: !isAddPlanEnabled || isLoading,\n      children: \"\\u589E\\u52A0\\u8BA1\\u5212\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 332,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 241,\n    columnNumber: 5\n  }, this);\n}\n_s(Header, \"0V8rxwnmzOOB8iVux6hBE7Ui7hk=\");\n_c = Header;\nvar _c;\n$RefreshReg$(_c, \"Header\");","map":{"version":3,"names":["React","useState","useEffect","useRef","getYears","getMonthsByYear","getPhasesByYearAndMonth","checkYearMonthPhaseExists","createTaskCircle","getLatestTaskCircle","jsxDEV","_jsxDEV","Header","onYearMonthPhaseChange","loading","_s","years","setYears","months","setMonths","phases","setPhases","selectedYear","setSelectedYear","selectedMonth","setSelectedMonth","selectedPhase","setSelectedPhase","yearInput","setYearInput","monthInput","setMonthInput","phaseInput","setPhaseInput","isAddPlanEnabled","setIsAddPlanEnabled","showYearDropdown","setShowYearDropdown","showMonthDropdown","setShowMonthDropdown","showPhaseDropdown","setShowPhaseDropdown","isLoading","setIsLoading","yearRef","monthRef","phaseRef","fetchData","yearsData","latestData","year","month","phase","monthsData","phasesData","error","console","fetchMonths","data","fetchPhases","checkExists","log","exists","handleAddPlan","alert","handleClickOutside","event","current","contains","target","document","addEventListener","removeEventListener","handleYearSelect","handleMonthSelect","handlePhaseSelect","className","children","fileName","_jsxFileName","lineNumber","columnNumber","ref","type","placeholder","value","onChange","e","onClick","disabled","map","_c","$RefreshReg$"],"sources":["E:/TraeProjects/DevelopmentDashboard/frontend/src/components/Header.js"],"sourcesContent":["import React from 'react';\r\nimport './Header.css';\r\nimport { useState, useEffect, useRef } from 'react';\r\nimport {\r\n  getYears,\r\n  getMonthsByYear,\r\n  getPhasesByYearAndMonth,\r\n  checkYearMonthPhaseExists,\r\n  createTaskCircle,\r\n  getLatestTaskCircle\r\n} from '../services/taskCircleService.js';\r\n\r\nexport default function Header({ onYearMonthPhaseChange, loading }) {\r\n  // 状态管理\r\n  const [years, setYears] = useState([]);\r\n  const [months, setMonths] = useState([]);\r\n  const [phases, setPhases] = useState([]);\r\n  const [selectedYear, setSelectedYear] = useState('');\r\n  const [selectedMonth, setSelectedMonth] = useState('');\r\n  const [selectedPhase, setSelectedPhase] = useState('');\r\n  const [yearInput, setYearInput] = useState('');\r\n  const [monthInput, setMonthInput] = useState('');\r\n  const [phaseInput, setPhaseInput] = useState('');\r\n  const [isAddPlanEnabled, setIsAddPlanEnabled] = useState(false);\r\n  const [showYearDropdown, setShowYearDropdown] = useState(false);\r\n  const [showMonthDropdown, setShowMonthDropdown] = useState(false);\r\n  const [showPhaseDropdown, setShowPhaseDropdown] = useState(false);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  // 引用\r\n  const yearRef = useRef(null);\r\n  const monthRef = useRef(null);\r\n  const phaseRef = useRef(null);\r\n\r\n  // 组件加载时获取年份和最新的task_circle数据\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      setIsLoading(true);\r\n      try {\r\n        // 获取年份列表\r\n        const yearsData = await getYears();\r\n        setYears(yearsData);\r\n\r\n        // 获取最新的task_circle数据\r\n        const latestData = await getLatestTaskCircle();\r\n        if (latestData) {\r\n          setSelectedYear(latestData.year);\r\n          setYearInput(latestData.year);\r\n          setSelectedMonth(latestData.month);\r\n          setMonthInput(latestData.month);\r\n          setSelectedPhase(latestData.phase);\r\n          setPhaseInput(latestData.phase);\r\n\r\n          // 通知父组件更新数据\r\n          if (onYearMonthPhaseChange) {\r\n            onYearMonthPhaseChange(latestData.year, latestData.month, latestData.phase);\r\n          }\r\n\r\n          // 加载月份和阶段\r\n          if (latestData.year) {\r\n            const monthsData = await getMonthsByYear(latestData.year);\r\n            setMonths(monthsData);\r\n\r\n            if (latestData.month) {\r\n              const phasesData = await getPhasesByYearAndMonth(latestData.year, latestData.month);\r\n              setPhases(phasesData);\r\n            }\r\n          }\r\n        }\r\n      } catch (error) {\r\n        console.error('获取数据失败:', error);\r\n      } finally {\r\n        setIsLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, [onYearMonthPhaseChange]);\r\n\r\n  // 监听年份变化，更新月份\r\n  useEffect(() => {\r\n    if (selectedYear) {\r\n      const fetchMonths = async () => {\r\n        setIsLoading(true);\r\n        try {\r\n          const data = await getMonthsByYear(selectedYear);\r\n          setMonths(data);\r\n          setSelectedMonth('');\r\n          setPhases([]);\r\n          setSelectedPhase('');\r\n        } catch (error) {\r\n          console.error('获取月份列表失败:', error);\r\n        } finally {\r\n          setIsLoading(false);\r\n        }\r\n      };\r\n      fetchMonths();\r\n    } else {\r\n      setMonths([]);\r\n      setPhases([]);\r\n    }\r\n  }, [selectedYear]);\r\n\r\n  // 监听月份变化，更新阶段\r\n  useEffect(() => {\r\n    if (selectedYear && selectedMonth) {\r\n      const fetchPhases = async () => {\r\n        setIsLoading(true);\r\n        try {\r\n          const data = await getPhasesByYearAndMonth(selectedYear, selectedMonth);\r\n          setPhases(data);\r\n          setSelectedPhase('');\r\n        } catch (error) {\r\n          console.error('获取阶段列表失败:', error);\r\n        } finally {\r\n          setIsLoading(false);\r\n        }\r\n      };\r\n      fetchPhases();\r\n    } else if (selectedYear) {\r\n      setPhases([]);\r\n    }\r\n  }, [selectedYear, selectedMonth]);\r\n\r\n  // 监听输入变化，检查是否存在匹配数据\r\n  useEffect(() => {\r\n    if (yearInput && monthInput && phaseInput) {\r\n      const checkExists = async () => {\r\n        try {\r\n          console.log('检查数据是否存在:', yearInput, monthInput, phaseInput);\r\n          const exists = await checkYearMonthPhaseExists(\r\n            yearInput,\r\n            monthInput,\r\n            phaseInput\r\n          );\r\n          console.log('数据存在结果:', exists);\r\n          // 只有当数据不存在时才启用按钮\r\n          setIsAddPlanEnabled(!exists);\r\n          console.log('按钮状态:', !exists);\r\n        } catch (error) {\r\n          console.error('检查年月阶段失败:', error);\r\n          // 发生错误时禁用按钮\r\n          setIsAddPlanEnabled(false);\r\n        }\r\n      };\r\n      checkExists();\r\n    } else {\r\n      setIsAddPlanEnabled(false);\r\n      console.log('输入不完整，禁用按钮');\r\n    }\r\n  }, [yearInput, monthInput, phaseInput]);\r\n\r\n  // 处理增加计划按钮点击\r\n  const handleAddPlan = async () => {\r\n    if (isAddPlanEnabled) {\r\n      try {\r\n        setIsLoading(true);\r\n        await createTaskCircle(yearInput, monthInput, phaseInput);\r\n        // 成功后提示用户\r\n        alert('计划已成功添加！');\r\n        // 刷新年份列表\r\n        const data = await getYears();\r\n        setYears(data);\r\n\r\n        // 通知父组件更新数据\r\n        if (onYearMonthPhaseChange) {\r\n          onYearMonthPhaseChange(yearInput, monthInput, phaseInput);\r\n        }\r\n      } catch (error) {\r\n        console.error('添加计划失败:', error);\r\n        alert('添加计划失败，请稍后再试。');\r\n      } finally {\r\n        setIsLoading(false);\r\n      }\r\n    }\r\n  };\r\n\r\n  // 点击空白处关闭下拉菜单\r\n  useEffect(() => {\r\n    const handleClickOutside = (event) => {\r\n      if (\r\n        yearRef.current && !yearRef.current.contains(event.target)\r\n      ) {\r\n        setShowYearDropdown(false);\r\n      }\r\n      if (\r\n        monthRef.current && !monthRef.current.contains(event.target)\r\n      ) {\r\n        setShowMonthDropdown(false);\r\n      }\r\n      if (\r\n        phaseRef.current && !phaseRef.current.contains(event.target)\r\n      ) {\r\n        setShowPhaseDropdown(false);\r\n      }\r\n    };\r\n\r\n    document.addEventListener('mousedown', handleClickOutside);\r\n    return () => {\r\n      document.removeEventListener('mousedown', handleClickOutside);\r\n    };\r\n  }, []);\r\n\r\n  // 处理年份选择\r\n  const handleYearSelect = (year) => {\r\n    setSelectedYear(year);\r\n    setYearInput(year);\r\n    setShowYearDropdown(false);\r\n\r\n    // 通知父组件更新数据\r\n    if (onYearMonthPhaseChange && year && selectedMonth && selectedPhase) {\r\n      onYearMonthPhaseChange(year, selectedMonth, selectedPhase);\r\n    }\r\n  };\r\n\r\n  // 处理月份选择\r\n  const handleMonthSelect = (month) => {\r\n    setSelectedMonth(month);\r\n    setMonthInput(month);\r\n    setShowMonthDropdown(false);\r\n\r\n    // 通知父组件更新数据\r\n    if (onYearMonthPhaseChange && selectedYear && month && selectedPhase) {\r\n      onYearMonthPhaseChange(selectedYear, month, selectedPhase);\r\n    }\r\n  };\r\n\r\n  // 处理阶段选择\r\n  const handlePhaseSelect = (phase) => {\r\n    setSelectedPhase(phase);\r\n    setPhaseInput(phase);\r\n    setShowPhaseDropdown(false);\r\n\r\n    // 通知父组件更新数据\r\n    if (onYearMonthPhaseChange && selectedYear && selectedMonth && phase) {\r\n      onYearMonthPhaseChange(selectedYear, selectedMonth, phase);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"header-container\">\r\n      {isLoading && (\r\n        <div className=\"loading-overlay\">\r\n          <div className=\"loading-spinner\"></div>\r\n        </div>\r\n      )}\r\n      <div className=\"title-wrapper\">\r\n        <h2 className=\"title\">\r\n          <div className=\"dropdown-container\" ref={yearRef}>\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"年\"\r\n              value={yearInput}\r\n              onChange={(e) => {\r\n                setYearInput(e.target.value);\r\n                setSelectedYear('');\r\n              }}\r\n              onClick={() => setShowYearDropdown(!showYearDropdown)}\r\n              disabled={isLoading}\r\n            />\r\n            <span className=\"label\">年</span>\r\n            {showYearDropdown && (\r\n              <div className=\"dropdown\">\r\n                {years.map((year) => (\r\n                  <div\r\n                    key={year}\r\n                    className=\"dropdown-item\"\r\n                    onClick={() => handleYearSelect(year)}\r\n                  >\r\n                    {year}\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            )}\r\n          </div>\r\n          <div className=\"dropdown-container\" ref={monthRef}>\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"月\"\r\n              value={monthInput}\r\n              onChange={(e) => {\r\n                setMonthInput(e.target.value);\r\n                setSelectedMonth('');\r\n              }}\r\n              onClick={() => setShowMonthDropdown(!showMonthDropdown)}\r\n              disabled={isLoading}\r\n            />\r\n            <span className=\"label\">月</span>\r\n            {showMonthDropdown && (\r\n              <div className=\"dropdown\">\r\n                {months.map((month) => (\r\n                  <div\r\n                    key={month}\r\n                    className=\"dropdown-item\"\r\n                    onClick={() => handleMonthSelect(month)}\r\n                  >\r\n                    {month}\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            )}\r\n          </div>\r\n          <div className=\"dropdown-container\" ref={phaseRef}>\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"阶段\"\r\n              value={phaseInput}\r\n              onChange={(e) => {\r\n                setPhaseInput(e.target.value);\r\n                setSelectedPhase('');\r\n              }}\r\n              onClick={() => setShowPhaseDropdown(!showPhaseDropdown)}\r\n              disabled={isLoading}\r\n            />\r\n            <span className=\"label\">阶段项目交付及产品研发计划</span>\r\n            {showPhaseDropdown && (\r\n              <div className=\"dropdown\">\r\n                {phases.map((phase) => (\r\n                  <div\r\n                    key={phase}\r\n                    className=\"dropdown-item\"\r\n                    onClick={() => handlePhaseSelect(phase)}\r\n                  >\r\n                    第{phase}阶段\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            )}\r\n          </div>\r\n        </h2>\r\n      </div>\r\n      <button\r\n        className=\"add-plan\"\r\n        onClick={handleAddPlan}\r\n        disabled={!isAddPlanEnabled || isLoading}\r\n      >\r\n        增加计划\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}