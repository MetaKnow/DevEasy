{"ast":null,"code":"// 基础URL\nexport const BASE_URL='http://localhost:5000';// 获取任务列表\nexport const getTasks=async taskCircleId=>{try{const response=await fetch(`${BASE_URL}/tasks?task_circle_id=${taskCircleId}`);const data=await response.json();return Array.isArray(data)?data:[];}catch(error){console.error('获取任务列表失败:',error);return[];}};// 创建新任务\nexport const createTask=async(taskName,taskCircleId)=>{try{const response=await fetch(`${BASE_URL}/tasks/create`,{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({task_name:taskName,task_circle_id:taskCircleId})});if(!response.ok){throw new Error(`服务器响应错误: ${response.status}`);}return await response.json();}catch(error){console.error('创建任务失败:',error);throw error;}};// 创建新步骤\nexport const createStep=async(stepData,taskId,task_circle_id)=>{console.log('创建步骤参数:',stepData,taskId,task_circle_id);try{// 处理日期字段，将空字符串转为null\nconst processedStepData={...stepData,startdate:stepData.startdate||null,enddate:stepData.enddate||null};const response=await fetch('http://localhost:5000/dashboard/create',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({...processedStepData,task_id:taskId,task_circle_id:task_circle_id})});if(!response.ok){const errorText=await response.text();console.error('添加步骤失败:',response.status,errorText);throw new Error(`添加步骤失败: ${response.status} ${errorText}`);}const data=await response.json();console.log('创建步骤成功:',data);return data;}catch(error){console.error('添加步骤失败:',error);throw error;}};// 更新步骤\n// 更新步骤\nexport const updateStep=async(stepId,updatedData)=>{console.log('更新步骤参数:',stepId,updatedData);try{// 处理日期字段，但保留枚举字段原值\nconst processedData={...updatedData,startdate:updatedData.startdate||null,enddate:updatedData.enddate||null// 不要转换iscomplete和islate字段\n};const response=await fetch(`${BASE_URL}/dashboard/${stepId}`,{method:'PUT',headers:{'Content-Type':'application/json'},body:JSON.stringify(processedData)});if(!response.ok){const errorText=await response.text();console.error('更新步骤失败:',response.status,errorText);throw new Error(`更新步骤失败: ${response.status} ${errorText}`);}const data=await response.json();console.log('更新步骤成功:',data);return data;}catch(error){console.error('更新步骤失败:',error);throw error;}};// 更新任务\nexport const updateTask=async(taskId,updatedData)=>{console.log('更新任务参数:',taskId,updatedData);try{const response=await fetch(`${BASE_URL}/tasks/${taskId}`,{method:'PUT',headers:{'Content-Type':'application/json'},body:JSON.stringify(updatedData)});if(!response.ok){const errorText=await response.text();console.error('更新任务失败:',response.status,errorText);throw new Error(`更新任务失败: ${response.status} ${errorText}`);}const data=await response.json();console.log('更新任务成功:',data);return data;}catch(error){console.error('更新任务失败:',error);throw error;}};// 删除步骤\nexport const deleteStep=async stepId=>{console.log('删除步骤参数:',stepId);try{const response=await fetch(`${BASE_URL}/dashboard/${stepId}`,{method:'DELETE',headers:{'Content-Type':'application/json'}});if(!response.ok){const errorText=await response.text();console.error('删除步骤失败:',response.status,errorText);throw new Error(`删除步骤失败: ${response.status} ${errorText}`);}const data=await response.json();console.log('删除步骤成功:',data);return data;}catch(error){console.error('删除步骤失败:',error);throw error;}};// 删除任务\nexport const deleteTask=async taskId=>{try{const response=await fetch(`${BASE_URL}/tasks/${taskId}`,{method:'DELETE'});if(!response.ok){throw new Error('删除任务失败');}return await response.json();}catch(error){console.error('删除任务失败:',error);throw error;}};// 获取任务圈统计数据\nexport const getTaskCircleStats=async taskCircleId=>{try{const response=await fetch(`${BASE_URL}/task_circle/stats?id=${taskCircleId}`);if(!response.ok)throw new Error('获取统计数据失败');return await response.json();}catch(error){console.error('获取统计数据失败:',error);return null;}};","map":{"version":3,"names":["BASE_URL","getTasks","taskCircleId","response","fetch","data","json","Array","isArray","error","console","createTask","taskName","method","headers","body","JSON","stringify","task_name","task_circle_id","ok","Error","status","createStep","stepData","taskId","log","processedStepData","startdate","enddate","task_id","errorText","text","updateStep","stepId","updatedData","processedData","updateTask","deleteStep","deleteTask","getTaskCircleStats"],"sources":["E:/TraeProjects/DevelopmentDashboard/frontend/src/services/taskService.js"],"sourcesContent":["// 基础URL\r\nexport const BASE_URL = 'http://localhost:5000';\r\n\r\n// 获取任务列表\r\nexport const getTasks = async (taskCircleId) => {\r\n  try {\r\n    const response = await fetch(`${BASE_URL}/tasks?task_circle_id=${taskCircleId}`);\r\n    const data = await response.json();\r\n    return Array.isArray(data) ? data : [];\r\n  } catch (error) {\r\n    console.error('获取任务列表失败:', error);\r\n    return [];\r\n  }\r\n};\r\n\r\n// 创建新任务\r\nexport const createTask = async (taskName, taskCircleId) => {\r\n  try {\r\n    const response = await fetch(`${BASE_URL}/tasks/create`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify({\r\n        task_name: taskName,\r\n        task_circle_id: taskCircleId\r\n      })\r\n    });\r\n    if (!response.ok) {\r\n      throw new Error(`服务器响应错误: ${response.status}`);\r\n    }\r\n    return await response.json();\r\n  } catch (error) {\r\n    console.error('创建任务失败:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// 创建新步骤\r\nexport const createStep = async (stepData, taskId, task_circle_id) => {\r\n  console.log('创建步骤参数:', stepData, taskId, task_circle_id);\r\n  try {\r\n    // 处理日期字段，将空字符串转为null\r\n    const processedStepData = {\r\n      ...stepData,\r\n      startdate: stepData.startdate || null,\r\n      enddate: stepData.enddate || null\r\n    };\r\n\r\n    const response = await fetch('http://localhost:5000/dashboard/create', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify({\r\n        ...processedStepData,\r\n        task_id: taskId,\r\n        task_circle_id: task_circle_id\r\n      })\r\n    });\r\n    \r\n    if (!response.ok) {\r\n      const errorText = await response.text();\r\n      console.error('添加步骤失败:', response.status, errorText);\r\n      throw new Error(`添加步骤失败: ${response.status} ${errorText}`);\r\n    }\r\n    \r\n    const data = await response.json();\r\n    console.log('创建步骤成功:', data);\r\n    return data;\r\n  } catch (error) {\r\n    console.error('添加步骤失败:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// 更新步骤\r\n// 更新步骤\r\nexport const updateStep = async (stepId, updatedData) => {\r\n  console.log('更新步骤参数:', stepId, updatedData);\r\n  try {\r\n    // 处理日期字段，但保留枚举字段原值\r\n    const processedData = {\r\n      ...updatedData,\r\n      startdate: updatedData.startdate || null,\r\n      enddate: updatedData.enddate || null\r\n      // 不要转换iscomplete和islate字段\r\n    };\r\n\r\n    const response = await fetch(`${BASE_URL}/dashboard/${stepId}`, {\r\n      method: 'PUT',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify(processedData)\r\n    });\r\n    \r\n    if (!response.ok) {\r\n      const errorText = await response.text();\r\n      console.error('更新步骤失败:', response.status, errorText);\r\n      throw new Error(`更新步骤失败: ${response.status} ${errorText}`);\r\n    }\r\n    \r\n    const data = await response.json();\r\n    console.log('更新步骤成功:', data);\r\n    return data;\r\n  } catch (error) {\r\n    console.error('更新步骤失败:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// 更新任务\r\nexport const updateTask = async (taskId, updatedData) => {\r\n  console.log('更新任务参数:', taskId, updatedData);\r\n  try {\r\n    const response = await fetch(`${BASE_URL}/tasks/${taskId}`, {\r\n      method: 'PUT',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify(updatedData)\r\n    });\r\n    \r\n    if (!response.ok) {\r\n      const errorText = await response.text();\r\n      console.error('更新任务失败:', response.status, errorText);\r\n      throw new Error(`更新任务失败: ${response.status} ${errorText}`);\r\n    }\r\n    \r\n    const data = await response.json();\r\n    console.log('更新任务成功:', data);\r\n    return data;\r\n  } catch (error) {\r\n    console.error('更新任务失败:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// 删除步骤\r\nexport const deleteStep = async (stepId) => {\r\n  console.log('删除步骤参数:', stepId);\r\n  try {\r\n    const response = await fetch(`${BASE_URL}/dashboard/${stepId}`, {\r\n      method: 'DELETE',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      }\r\n    });\r\n    \r\n    if (!response.ok) {\r\n      const errorText = await response.text();\r\n      console.error('删除步骤失败:', response.status, errorText);\r\n      throw new Error(`删除步骤失败: ${response.status} ${errorText}`);\r\n    }\r\n    \r\n    const data = await response.json();\r\n    console.log('删除步骤成功:', data);\r\n    return data;\r\n  } catch (error) {\r\n    console.error('删除步骤失败:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// 删除任务\r\nexport const deleteTask = async (taskId) => {\r\n  try {\r\n    const response = await fetch(`${BASE_URL}/tasks/${taskId}`, {\r\n      method: 'DELETE'\r\n    });\r\n    if (!response.ok) {\r\n      throw new Error('删除任务失败');\r\n    }\r\n    return await response.json();\r\n  } catch (error) {\r\n    console.error('删除任务失败:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// 获取任务圈统计数据\r\nexport const getTaskCircleStats = async (taskCircleId) => {\r\n  try {\r\n    const response = await fetch(`${BASE_URL}/task_circle/stats?id=${taskCircleId}`);\r\n    if (!response.ok) throw new Error('获取统计数据失败');\r\n    return await response.json();\r\n  } catch (error) {\r\n    console.error('获取统计数据失败:', error);\r\n    return null;\r\n  }\r\n};"],"mappings":"AAAA;AACA,MAAO,MAAM,CAAAA,QAAQ,CAAG,uBAAuB,CAE/C;AACA,MAAO,MAAM,CAAAC,QAAQ,CAAG,KAAO,CAAAC,YAAY,EAAK,CAC9C,GAAI,CACF,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAC,KAAK,CAAC,GAAGJ,QAAQ,yBAAyBE,YAAY,EAAE,CAAC,CAChF,KAAM,CAAAG,IAAI,CAAG,KAAM,CAAAF,QAAQ,CAACG,IAAI,CAAC,CAAC,CAClC,MAAO,CAAAC,KAAK,CAACC,OAAO,CAACH,IAAI,CAAC,CAAGA,IAAI,CAAG,EAAE,CACxC,CAAE,MAAOI,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,WAAW,CAAEA,KAAK,CAAC,CACjC,MAAO,EAAE,CACX,CACF,CAAC,CAED;AACA,MAAO,MAAM,CAAAE,UAAU,CAAG,KAAAA,CAAOC,QAAQ,CAAEV,YAAY,GAAK,CAC1D,GAAI,CACF,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAC,KAAK,CAAC,GAAGJ,QAAQ,eAAe,CAAE,CACvDa,MAAM,CAAE,MAAM,CACdC,OAAO,CAAE,CACP,cAAc,CAAE,kBAClB,CAAC,CACDC,IAAI,CAAEC,IAAI,CAACC,SAAS,CAAC,CACnBC,SAAS,CAAEN,QAAQ,CACnBO,cAAc,CAAEjB,YAClB,CAAC,CACH,CAAC,CAAC,CACF,GAAI,CAACC,QAAQ,CAACiB,EAAE,CAAE,CAChB,KAAM,IAAI,CAAAC,KAAK,CAAC,YAAYlB,QAAQ,CAACmB,MAAM,EAAE,CAAC,CAChD,CACA,MAAO,MAAM,CAAAnB,QAAQ,CAACG,IAAI,CAAC,CAAC,CAC9B,CAAE,MAAOG,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,SAAS,CAAEA,KAAK,CAAC,CAC/B,KAAM,CAAAA,KAAK,CACb,CACF,CAAC,CAED;AACA,MAAO,MAAM,CAAAc,UAAU,CAAG,KAAAA,CAAOC,QAAQ,CAAEC,MAAM,CAAEN,cAAc,GAAK,CACpET,OAAO,CAACgB,GAAG,CAAC,SAAS,CAAEF,QAAQ,CAAEC,MAAM,CAAEN,cAAc,CAAC,CACxD,GAAI,CACF;AACA,KAAM,CAAAQ,iBAAiB,CAAG,CACxB,GAAGH,QAAQ,CACXI,SAAS,CAAEJ,QAAQ,CAACI,SAAS,EAAI,IAAI,CACrCC,OAAO,CAAEL,QAAQ,CAACK,OAAO,EAAI,IAC/B,CAAC,CAED,KAAM,CAAA1B,QAAQ,CAAG,KAAM,CAAAC,KAAK,CAAC,wCAAwC,CAAE,CACrES,MAAM,CAAE,MAAM,CACdC,OAAO,CAAE,CACP,cAAc,CAAE,kBAClB,CAAC,CACDC,IAAI,CAAEC,IAAI,CAACC,SAAS,CAAC,CACnB,GAAGU,iBAAiB,CACpBG,OAAO,CAAEL,MAAM,CACfN,cAAc,CAAEA,cAClB,CAAC,CACH,CAAC,CAAC,CAEF,GAAI,CAAChB,QAAQ,CAACiB,EAAE,CAAE,CAChB,KAAM,CAAAW,SAAS,CAAG,KAAM,CAAA5B,QAAQ,CAAC6B,IAAI,CAAC,CAAC,CACvCtB,OAAO,CAACD,KAAK,CAAC,SAAS,CAAEN,QAAQ,CAACmB,MAAM,CAAES,SAAS,CAAC,CACpD,KAAM,IAAI,CAAAV,KAAK,CAAC,WAAWlB,QAAQ,CAACmB,MAAM,IAAIS,SAAS,EAAE,CAAC,CAC5D,CAEA,KAAM,CAAA1B,IAAI,CAAG,KAAM,CAAAF,QAAQ,CAACG,IAAI,CAAC,CAAC,CAClCI,OAAO,CAACgB,GAAG,CAAC,SAAS,CAAErB,IAAI,CAAC,CAC5B,MAAO,CAAAA,IAAI,CACb,CAAE,MAAOI,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,SAAS,CAAEA,KAAK,CAAC,CAC/B,KAAM,CAAAA,KAAK,CACb,CACF,CAAC,CAED;AACA;AACA,MAAO,MAAM,CAAAwB,UAAU,CAAG,KAAAA,CAAOC,MAAM,CAAEC,WAAW,GAAK,CACvDzB,OAAO,CAACgB,GAAG,CAAC,SAAS,CAAEQ,MAAM,CAAEC,WAAW,CAAC,CAC3C,GAAI,CACF;AACA,KAAM,CAAAC,aAAa,CAAG,CACpB,GAAGD,WAAW,CACdP,SAAS,CAAEO,WAAW,CAACP,SAAS,EAAI,IAAI,CACxCC,OAAO,CAAEM,WAAW,CAACN,OAAO,EAAI,IAChC;AACF,CAAC,CAED,KAAM,CAAA1B,QAAQ,CAAG,KAAM,CAAAC,KAAK,CAAC,GAAGJ,QAAQ,cAAckC,MAAM,EAAE,CAAE,CAC9DrB,MAAM,CAAE,KAAK,CACbC,OAAO,CAAE,CACP,cAAc,CAAE,kBAClB,CAAC,CACDC,IAAI,CAAEC,IAAI,CAACC,SAAS,CAACmB,aAAa,CACpC,CAAC,CAAC,CAEF,GAAI,CAACjC,QAAQ,CAACiB,EAAE,CAAE,CAChB,KAAM,CAAAW,SAAS,CAAG,KAAM,CAAA5B,QAAQ,CAAC6B,IAAI,CAAC,CAAC,CACvCtB,OAAO,CAACD,KAAK,CAAC,SAAS,CAAEN,QAAQ,CAACmB,MAAM,CAAES,SAAS,CAAC,CACpD,KAAM,IAAI,CAAAV,KAAK,CAAC,WAAWlB,QAAQ,CAACmB,MAAM,IAAIS,SAAS,EAAE,CAAC,CAC5D,CAEA,KAAM,CAAA1B,IAAI,CAAG,KAAM,CAAAF,QAAQ,CAACG,IAAI,CAAC,CAAC,CAClCI,OAAO,CAACgB,GAAG,CAAC,SAAS,CAAErB,IAAI,CAAC,CAC5B,MAAO,CAAAA,IAAI,CACb,CAAE,MAAOI,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,SAAS,CAAEA,KAAK,CAAC,CAC/B,KAAM,CAAAA,KAAK,CACb,CACF,CAAC,CAED;AACA,MAAO,MAAM,CAAA4B,UAAU,CAAG,KAAAA,CAAOZ,MAAM,CAAEU,WAAW,GAAK,CACvDzB,OAAO,CAACgB,GAAG,CAAC,SAAS,CAAED,MAAM,CAAEU,WAAW,CAAC,CAC3C,GAAI,CACF,KAAM,CAAAhC,QAAQ,CAAG,KAAM,CAAAC,KAAK,CAAC,GAAGJ,QAAQ,UAAUyB,MAAM,EAAE,CAAE,CAC1DZ,MAAM,CAAE,KAAK,CACbC,OAAO,CAAE,CACP,cAAc,CAAE,kBAClB,CAAC,CACDC,IAAI,CAAEC,IAAI,CAACC,SAAS,CAACkB,WAAW,CAClC,CAAC,CAAC,CAEF,GAAI,CAAChC,QAAQ,CAACiB,EAAE,CAAE,CAChB,KAAM,CAAAW,SAAS,CAAG,KAAM,CAAA5B,QAAQ,CAAC6B,IAAI,CAAC,CAAC,CACvCtB,OAAO,CAACD,KAAK,CAAC,SAAS,CAAEN,QAAQ,CAACmB,MAAM,CAAES,SAAS,CAAC,CACpD,KAAM,IAAI,CAAAV,KAAK,CAAC,WAAWlB,QAAQ,CAACmB,MAAM,IAAIS,SAAS,EAAE,CAAC,CAC5D,CAEA,KAAM,CAAA1B,IAAI,CAAG,KAAM,CAAAF,QAAQ,CAACG,IAAI,CAAC,CAAC,CAClCI,OAAO,CAACgB,GAAG,CAAC,SAAS,CAAErB,IAAI,CAAC,CAC5B,MAAO,CAAAA,IAAI,CACb,CAAE,MAAOI,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,SAAS,CAAEA,KAAK,CAAC,CAC/B,KAAM,CAAAA,KAAK,CACb,CACF,CAAC,CAED;AACA,MAAO,MAAM,CAAA6B,UAAU,CAAG,KAAO,CAAAJ,MAAM,EAAK,CAC1CxB,OAAO,CAACgB,GAAG,CAAC,SAAS,CAAEQ,MAAM,CAAC,CAC9B,GAAI,CACF,KAAM,CAAA/B,QAAQ,CAAG,KAAM,CAAAC,KAAK,CAAC,GAAGJ,QAAQ,cAAckC,MAAM,EAAE,CAAE,CAC9DrB,MAAM,CAAE,QAAQ,CAChBC,OAAO,CAAE,CACP,cAAc,CAAE,kBAClB,CACF,CAAC,CAAC,CAEF,GAAI,CAACX,QAAQ,CAACiB,EAAE,CAAE,CAChB,KAAM,CAAAW,SAAS,CAAG,KAAM,CAAA5B,QAAQ,CAAC6B,IAAI,CAAC,CAAC,CACvCtB,OAAO,CAACD,KAAK,CAAC,SAAS,CAAEN,QAAQ,CAACmB,MAAM,CAAES,SAAS,CAAC,CACpD,KAAM,IAAI,CAAAV,KAAK,CAAC,WAAWlB,QAAQ,CAACmB,MAAM,IAAIS,SAAS,EAAE,CAAC,CAC5D,CAEA,KAAM,CAAA1B,IAAI,CAAG,KAAM,CAAAF,QAAQ,CAACG,IAAI,CAAC,CAAC,CAClCI,OAAO,CAACgB,GAAG,CAAC,SAAS,CAAErB,IAAI,CAAC,CAC5B,MAAO,CAAAA,IAAI,CACb,CAAE,MAAOI,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,SAAS,CAAEA,KAAK,CAAC,CAC/B,KAAM,CAAAA,KAAK,CACb,CACF,CAAC,CAED;AACA,MAAO,MAAM,CAAA8B,UAAU,CAAG,KAAO,CAAAd,MAAM,EAAK,CAC1C,GAAI,CACF,KAAM,CAAAtB,QAAQ,CAAG,KAAM,CAAAC,KAAK,CAAC,GAAGJ,QAAQ,UAAUyB,MAAM,EAAE,CAAE,CAC1DZ,MAAM,CAAE,QACV,CAAC,CAAC,CACF,GAAI,CAACV,QAAQ,CAACiB,EAAE,CAAE,CAChB,KAAM,IAAI,CAAAC,KAAK,CAAC,QAAQ,CAAC,CAC3B,CACA,MAAO,MAAM,CAAAlB,QAAQ,CAACG,IAAI,CAAC,CAAC,CAC9B,CAAE,MAAOG,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,SAAS,CAAEA,KAAK,CAAC,CAC/B,KAAM,CAAAA,KAAK,CACb,CACF,CAAC,CAED;AACA,MAAO,MAAM,CAAA+B,kBAAkB,CAAG,KAAO,CAAAtC,YAAY,EAAK,CACxD,GAAI,CACF,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAC,KAAK,CAAC,GAAGJ,QAAQ,yBAAyBE,YAAY,EAAE,CAAC,CAChF,GAAI,CAACC,QAAQ,CAACiB,EAAE,CAAE,KAAM,IAAI,CAAAC,KAAK,CAAC,UAAU,CAAC,CAC7C,MAAO,MAAM,CAAAlB,QAAQ,CAACG,IAAI,CAAC,CAAC,CAC9B,CAAE,MAAOG,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,WAAW,CAAEA,KAAK,CAAC,CACjC,MAAO,KAAI,CACb,CACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}