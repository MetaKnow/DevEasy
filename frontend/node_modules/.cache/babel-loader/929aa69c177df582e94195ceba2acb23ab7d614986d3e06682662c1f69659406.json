{"ast":null,"code":"var _jsxFileName = \"E:\\\\TraeProjects\\\\DevelopmentDashboard\\\\frontend\\\\src\\\\components\\\\Header.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport './Header.css';\nimport { useState, useEffect, useRef } from 'react';\nimport { getYears, getMonthsByYear, getPhasesByYearAndMonth, checkYearMonthPhaseExists, createTaskCircle, deleteTaskCircle } from '../services/taskCircleService.js';\nimport { BASE_URL, getTaskCircleStats } from '../services/taskService.js';\nimport * as XLSX from 'xlsx';\nimport { getTasks } from '../services/taskService.js';\nimport StagingArea from './StagingArea.js';\nimport SearchPanel from './SearchPanel.js';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Header({\n  onTaskCircleChange\n}) {\n  _s();\n  // 状态管理\n  const [years, setYears] = useState([]);\n  const [months, setMonths] = useState([]);\n  const [phases, setPhases] = useState([]);\n  const [selectedYear, setSelectedYear] = useState('');\n  const [selectedMonth, setSelectedMonth] = useState('');\n  const [selectedPhase, setSelectedPhase] = useState('');\n  const [yearInput, setYearInput] = useState('');\n  const [monthInput, setMonthInput] = useState('');\n  const [phaseInput, setPhaseInput] = useState('');\n  const [isAddPlanEnabled, setIsAddPlanEnabled] = useState(false);\n  const [showYearDropdown, setShowYearDropdown] = useState(false);\n  const [showMonthDropdown, setShowMonthDropdown] = useState(false);\n  const [showPhaseDropdown, setShowPhaseDropdown] = useState(false);\n  const [showSuccessMessage, setShowSuccessMessage] = useState(false);\n  const [successInfo, setSuccessInfo] = useState({\n    year: '',\n    month: '',\n    phase: ''\n  });\n  // 新增：用于区分是添加还是删除操作的状态\n  const [isAddOperation, setIsAddOperation] = useState(true);\n\n  // 引用\n  const yearRef = useRef(null);\n  const monthRef = useRef(null);\n  const phaseRef = useRef(null);\n\n  // 处理打开暂存区\n  const [showStagingArea, setShowStagingArea] = useState(false);\n  const handleOpenStaging = () => {\n    setShowStagingArea(true);\n  };\n  const handleCloseStagingArea = () => {\n    setShowStagingArea(false);\n  };\n\n  // 处理搜索面板\n  const [showSearchPanel, setShowSearchPanel] = useState(false);\n  const handleOpenSearch = () => {\n    setShowSearchPanel(true);\n  };\n  const handleCloseSearch = () => {\n    setShowSearchPanel(false);\n  };\n\n  // 处理任务选择（从搜索结果跳转）\n  const handleTaskSelect = async task => {\n    try {\n      // 设置年份并加载对应的月份\n      setSelectedYear(task.year.toString());\n      const monthsData = await getMonthsByYear(task.year);\n      setMonths(monthsData);\n\n      // 设置月份并加载对应的阶段\n      setSelectedMonth(task.month.toString());\n      const phasesData = await getPhasesByYearAndMonth(task.year, task.month);\n      setPhases(phasesData);\n\n      // 设置阶段\n      setSelectedPhase(task.phase.toString());\n\n      // 触发任务圈变化，加载对应的任务数据\n      if (onTaskCircleChange) {\n        onTaskCircleChange(task.task_circle_id, true);\n        // 延迟一下再设置为false，确保数据加载完成\n        setTimeout(() => {\n          onTaskCircleChange(task.task_circle_id, false);\n        }, 500);\n      }\n    } catch (error) {\n      console.error('跳转到任务失败:', error);\n      alert('跳转到任务失败，请稍后再试');\n    }\n  };\n\n  // 组件加载时获取年份\n  useEffect(() => {\n    const fetchYears = async () => {\n      const data = await getYears();\n      setYears(data);\n    };\n    fetchYears();\n  }, []);\n\n  // 监听成功消息显示状态\n  useEffect(() => {\n    let timer;\n    if (showSuccessMessage) {\n      timer = setTimeout(() => {\n        setShowSuccessMessage(false);\n      }, 3000); // 3秒后自动隐藏\n    }\n    return () => clearTimeout(timer);\n  }, [showSuccessMessage]);\n\n  // 监听年份变化，更新月份\n  useEffect(() => {\n    if (selectedYear) {\n      const fetchMonths = async () => {\n        const data = await getMonthsByYear(selectedYear);\n        setMonths(data);\n        setSelectedMonth('');\n        setPhases([]);\n        setSelectedPhase('');\n      };\n      fetchMonths();\n    } else {\n      setMonths([]);\n      setPhases([]);\n    }\n  }, [selectedYear]);\n\n  // 监听月份变化，更新阶段\n  useEffect(() => {\n    if (selectedYear && selectedMonth) {\n      const fetchPhases = async () => {\n        const data = await getPhasesByYearAndMonth(selectedYear, selectedMonth);\n        setPhases(data);\n        setSelectedPhase('');\n      };\n      fetchPhases();\n    } else if (selectedYear) {\n      setPhases([]);\n    }\n  }, [selectedYear, selectedMonth]);\n\n  // 监听输入变化，检查是否存在匹配数据\n  // 增加状态，跟踪是否可以删除计划\n  const [isDeletePlanEnabled, setIsDeletePlanEnabled] = useState(false);\n\n  // 修改监听输入变化的 useEffect，同时检查是否可以删除计划\n  useEffect(() => {\n    if (yearInput && monthInput && phaseInput) {\n      const checkExists = async () => {\n        try {\n          console.log('检查数据是否存在:', yearInput, monthInput, phaseInput);\n          const exists = await checkYearMonthPhaseExists(yearInput, monthInput, phaseInput);\n          console.log('数据存在结果:', exists);\n          // 只有当数据不存在时才启用添加按钮\n          setIsAddPlanEnabled(!exists);\n          // 只有当数据存在时才启用删除按钮\n          setIsDeletePlanEnabled(exists);\n          console.log('添加按钮状态:', !exists);\n          console.log('删除按钮状态:', exists);\n        } catch (error) {\n          console.error('检查年月阶段失败:', error);\n          // 发生错误时禁用按钮\n          setIsAddPlanEnabled(false);\n          setIsDeletePlanEnabled(false);\n        }\n      };\n      checkExists();\n    } else {\n      setIsAddPlanEnabled(false);\n      setIsDeletePlanEnabled(false);\n      console.log('输入不完整，禁用按钮');\n    }\n  }, [yearInput, monthInput, phaseInput]);\n\n  // 处理删除计划按钮点击\n  const handleDeletePlan = async () => {\n    if (isDeletePlanEnabled) {\n      try {\n        // 显示确认对话框\n        if (window.confirm(`确定要删除 ${yearInput}年${monthInput}月${phaseInput} 计划及其所有任务和步骤吗？`)) {\n          // 删除计划\n          await deleteTaskCircle(yearInput, monthInput, phaseInput);\n\n          // 保存成功信息\n          setSuccessInfo({\n            year: yearInput,\n            month: monthInput,\n            phase: phaseInput\n          });\n          // 设置为删除操作\n          setIsAddOperation(false);\n          setShowSuccessMessage(true);\n\n          // 通知父组件刷新表格\n          if (onTaskCircleChange) {\n            onTaskCircleChange('', false);\n          }\n\n          // 成功后刷新列表\n          // 刷新年份列表\n          const yearsData = await getYears();\n          setYears(yearsData);\n\n          // 如果有选择年份，刷新月份列表\n          if (yearInput) {\n            const monthsData = await getMonthsByYear(yearInput);\n            setMonths(monthsData);\n\n            // 如果有选择月份，刷新阶段列表\n            if (monthInput) {\n              const phasesData = await getPhasesByYearAndMonth(yearInput, monthInput);\n              setPhases(phasesData);\n            }\n          }\n\n          // 重置输入\n          setYearInput('');\n          setMonthInput('');\n          setPhaseInput('');\n        }\n      } catch (error) {\n        console.error('删除计划失败:', error);\n        alert('删除计划失败，请稍后再试。');\n      }\n    }\n  };\n\n  // 修改渲染部分，添加删除计划按钮\n  // 在 return 语句中的适当位置添加\n  /*#__PURE__*/_jsxDEV(\"button\", {\n    className: \"delete-plan-button\",\n    onClick: handleDeletePlan,\n    disabled: !isDeletePlanEnabled,\n    children: \"\\u5220\\u9664\\u8BA1\\u5212\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 238,\n    columnNumber: 3\n  }, this);\n  const handleAddPlan = async () => {\n    if (isAddPlanEnabled) {\n      try {\n        // 创建新计划\n        await createTaskCircle(yearInput, monthInput, phaseInput);\n\n        // 保存成功信息\n        setSuccessInfo({\n          year: yearInput,\n          month: monthInput,\n          phase: phaseInput\n        });\n        // 设置为添加操作\n        setIsAddOperation(true);\n        setShowSuccessMessage(true);\n\n        // 成功后获取新计划的task_circle_id并设置\n        await getTaskCircleId(yearInput, monthInput, phaseInput);\n\n        // 成功后更新按钮状态\n        setIsAddPlanEnabled(false);\n        setIsDeletePlanEnabled(true);\n\n        // 成功后刷新列表\n        // 刷新年份列表\n        const yearsData = await getYears();\n        setYears(yearsData);\n\n        // 如果有选择年份，刷新月份列表\n        if (yearInput) {\n          const monthsData = await getMonthsByYear(yearInput);\n          setMonths(monthsData);\n\n          // 如果有选择月份，刷新阶段列表\n          if (monthInput) {\n            const phasesData = await getPhasesByYearAndMonth(yearInput, monthInput);\n            setPhases(phasesData);\n          }\n        }\n      } catch (error) {\n        console.error('添加计划失败:', error);\n        alert('添加计划失败，请稍后再试。');\n      }\n    }\n  };\n\n  // 点击空白处关闭下拉菜单\n  useEffect(() => {\n    const handleClickOutside = event => {\n      if (yearRef.current && !yearRef.current.contains(event.target)) {\n        setShowYearDropdown(false);\n      }\n      if (monthRef.current && !monthRef.current.contains(event.target)) {\n        setShowMonthDropdown(false);\n      }\n      if (phaseRef.current && !phaseRef.current.contains(event.target)) {\n        setShowPhaseDropdown(false);\n      }\n    };\n    document.addEventListener('mousedown', handleClickOutside);\n    return () => {\n      document.removeEventListener('mousedown', handleClickOutside);\n    };\n  }, []);\n\n  // 处理年份选择\n  // 添加状态管理\n  const [taskCircleId, setTaskCircleId] = useState('');\n  const [loading, setLoading] = useState(false);\n  // 删除统计数据状态\n  // const [stats, setStats] = useState(null);\n\n  // 添加获取 task_circle_id 的函数\n  const getTaskCircleId = async (year, month, phase) => {\n    try {\n      setLoading(true);\n      if (onTaskCircleChange) {\n        onTaskCircleChange('', true);\n      }\n      const response = await fetch(`${BASE_URL}/task_circle/id?year=${year}&month=${month}&phase=${phase}`);\n      const data = await response.json();\n      setTaskCircleId(data.id);\n\n      // 删除以下几行\n      // if (data.id) {\n      //   const statsData = await getTaskCircleStats(data.id);\n      //   setStats(statsData);\n      // }\n\n      if (onTaskCircleChange) {\n        onTaskCircleChange(data.id, false);\n      }\n      return data.id;\n    } catch (error) {\n      console.error('获取 task_circle_id 失败:', error);\n      if (onTaskCircleChange) {\n        onTaskCircleChange('', false);\n      }\n      return '';\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // 修改 handleYearSelect、handleMonthSelect、handlePhaseSelect 函数\n  const handleYearSelect = year => {\n    setSelectedYear(year);\n    setYearInput(year);\n    setShowYearDropdown(false);\n    if (year && selectedMonth && selectedPhase) {\n      getTaskCircleId(year, selectedMonth, selectedPhase);\n    }\n  };\n  const handleMonthSelect = month => {\n    setSelectedMonth(month);\n    setMonthInput(month);\n    setShowMonthDropdown(false);\n    if (selectedYear && month && selectedPhase) {\n      getTaskCircleId(selectedYear, month, selectedPhase);\n    }\n  };\n  const handlePhaseSelect = phase => {\n    setSelectedPhase(phase);\n    setPhaseInput(phase);\n    setShowPhaseDropdown(false);\n    if (selectedYear && selectedMonth && phase) {\n      getTaskCircleId(selectedYear, selectedMonth, phase);\n    }\n  };\n  const handleExportExcel = async () => {\n    if (!taskCircleId) return;\n    try {\n      // 获取当前计划的任务和步骤数据\n      const tasks = await getTasks(taskCircleId);\n\n      // 准备导出数据（展平任务和步骤关系）\n      const exportData = [];\n      tasks.forEach(task => {\n        // 检查是否有步骤数组\n        if (Array.isArray(task.steps) && task.steps.length > 0) {\n          // 有步骤，遍历步骤\n          task.steps.forEach(step => {\n            exportData.push({\n              '任务名称': task.task_name,\n              '步骤名称': step.task_step,\n              '开始日期': step.startdate || '',\n              '截止日期': step.enddate || '',\n              '负责人': step.responsibility || '',\n              '状态': step.taskstate || '',\n              '是否完成': step.iscomplete || '',\n              '是否逾期': step.islate || '',\n              '优先级': step.priority || '',\n              '备注': step.remark || ''\n            });\n          });\n        } else {\n          // 没有步骤，添加仅包含任务信息的条目\n          exportData.push({\n            '任务名称': task.task_name,\n            '步骤名称': '',\n            '开始日期': '',\n            '截止日期': '',\n            '负责人': '',\n            '状态': '',\n            '是否完成': '',\n            '是否逾期': '',\n            '优先级': '',\n            '备注': ''\n          });\n        }\n      });\n\n      // 创建工作簿和工作表\n      const worksheet = XLSX.utils.json_to_sheet(exportData);\n      const workbook = XLSX.utils.book_new();\n      XLSX.utils.book_append_sheet(workbook, worksheet, '任务步骤列表');\n\n      // 生成文件名（当前年月阶段）\n      const fileName = `${yearInput}年${monthInput}月第${phaseInput}阶段任务步骤.xlsx`;\n\n      // 导出并下载\n      XLSX.writeFile(workbook, fileName);\n    } catch (error) {\n      console.error('导出Excel失败:', error);\n      alert('导出Excel失败，请稍后再试');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header-container\",\n      children: [loading && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading-overlay\",\n        children: \"\\u52A0\\u8F7D\\u4E2D...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 447,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"title-wrapper\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"title\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"dropdown-container\",\n            ref: yearRef,\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              placeholder: \"\\u5E74\",\n              value: yearInput,\n              onChange: e => {\n                setYearInput(e.target.value);\n                setSelectedYear('');\n              },\n              onClick: () => setShowYearDropdown(!showYearDropdown)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 451,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"label\",\n              children: \"\\u5E74\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 461,\n              columnNumber: 15\n            }, this), showYearDropdown && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"dropdown\",\n              children: years.map(year => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"dropdown-item\",\n                onClick: () => handleYearSelect(year),\n                children: year\n              }, year, false, {\n                fileName: _jsxFileName,\n                lineNumber: 465,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 463,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 450,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"dropdown-container\",\n            ref: monthRef,\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              placeholder: \"\\u6708\",\n              value: monthInput,\n              onChange: e => {\n                setMonthInput(e.target.value);\n                setSelectedMonth('');\n              },\n              onClick: () => setShowMonthDropdown(!showMonthDropdown)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 477,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"label\",\n              children: \"\\u6708\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 487,\n              columnNumber: 15\n            }, this), showMonthDropdown && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"dropdown\",\n              children: months.map(month => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"dropdown-item\",\n                onClick: () => handleMonthSelect(month),\n                children: month\n              }, month, false, {\n                fileName: _jsxFileName,\n                lineNumber: 491,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 489,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 476,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"dropdown-container\",\n            ref: phaseRef,\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              placeholder: \"\\u9636\\u6BB5\",\n              value: phaseInput,\n              onChange: e => {\n                setPhaseInput(e.target.value);\n                setSelectedPhase('');\n              },\n              onClick: () => setShowPhaseDropdown(!showPhaseDropdown)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 503,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"label\",\n              children: \"\\u9636\\u6BB5\\u9879\\u76EE\\u4EA4\\u4ED8\\u53CA\\u4EA7\\u54C1\\u7814\\u53D1\\u8BA1\\u5212\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 513,\n              columnNumber: 15\n            }, this), showPhaseDropdown && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"dropdown\",\n              children: phases.map(phase => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"dropdown-item\",\n                onClick: () => handlePhaseSelect(phase),\n                children: [\"\\u7B2C\", phase, \"\\u9636\\u6BB5\"]\n              }, phase, true, {\n                fileName: _jsxFileName,\n                lineNumber: 517,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 515,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 502,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 449,\n          columnNumber: 11\n        }, this), showSuccessMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"success-message\",\n          children: [isAddOperation ? '计划添加成功' : '计划删除成功', \": \", successInfo.year, \"\\u5E74\", successInfo.month, \"\\u6708 \\u7B2C\", successInfo.phase, \"\\u9636\\u6BB5\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 531,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 448,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"add-plan\",\n        onClick: handleAddPlan,\n        disabled: !isAddPlanEnabled,\n        children: \"\\u589E\\u52A0\\u8BA1\\u5212\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 536,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"add-plan\",\n        onClick: handleDeletePlan,\n        disabled: !isDeletePlanEnabled,\n        style: {\n          marginLeft: '10px'\n        },\n        children: \"\\u5220\\u9664\\u8BA1\\u5212\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 543,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"add-plan\",\n        onClick: handleExportExcel,\n        disabled: !isDeletePlanEnabled,\n        style: {\n          marginLeft: '10px'\n        },\n        children: \"\\u5BFC\\u51FA\\u8868\\u683C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 552,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"add-plan\",\n        onClick: handleOpenStaging,\n        style: {\n          marginLeft: '10px',\n          backgroundColor: '#fa8c16'\n        },\n        children: \"\\u6682\\u5B58\\u533A\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 561,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"add-plan\",\n        onClick: handleOpenSearch,\n        style: {\n          marginLeft: '10px',\n          backgroundColor: '#52c41a'\n        },\n        children: \"\\u68C0\\u7D22\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 569,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 446,\n      columnNumber: 7\n    }, this), showStagingArea && /*#__PURE__*/_jsxDEV(StagingArea, {\n      onClose: handleCloseStagingArea\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 580,\n      columnNumber: 9\n    }, this), showSearchPanel && /*#__PURE__*/_jsxDEV(SearchPanel, {\n      onClose: handleCloseSearch,\n      onTaskSelect: handleTaskSelect\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 585,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n_s(Header, \"YB4WmqjcxYMO8DZIQaXb4sWjs2g=\");\n_c = Header;\nvar _c;\n$RefreshReg$(_c, \"Header\");","map":{"version":3,"names":["React","useState","useEffect","useRef","getYears","getMonthsByYear","getPhasesByYearAndMonth","checkYearMonthPhaseExists","createTaskCircle","deleteTaskCircle","BASE_URL","getTaskCircleStats","XLSX","getTasks","StagingArea","SearchPanel","jsxDEV","_jsxDEV","Fragment","_Fragment","Header","onTaskCircleChange","_s","years","setYears","months","setMonths","phases","setPhases","selectedYear","setSelectedYear","selectedMonth","setSelectedMonth","selectedPhase","setSelectedPhase","yearInput","setYearInput","monthInput","setMonthInput","phaseInput","setPhaseInput","isAddPlanEnabled","setIsAddPlanEnabled","showYearDropdown","setShowYearDropdown","showMonthDropdown","setShowMonthDropdown","showPhaseDropdown","setShowPhaseDropdown","showSuccessMessage","setShowSuccessMessage","successInfo","setSuccessInfo","year","month","phase","isAddOperation","setIsAddOperation","yearRef","monthRef","phaseRef","showStagingArea","setShowStagingArea","handleOpenStaging","handleCloseStagingArea","showSearchPanel","setShowSearchPanel","handleOpenSearch","handleCloseSearch","handleTaskSelect","task","toString","monthsData","phasesData","task_circle_id","setTimeout","error","console","alert","fetchYears","data","timer","clearTimeout","fetchMonths","fetchPhases","isDeletePlanEnabled","setIsDeletePlanEnabled","checkExists","log","exists","handleDeletePlan","window","confirm","yearsData","className","onClick","disabled","children","fileName","_jsxFileName","lineNumber","columnNumber","handleAddPlan","getTaskCircleId","handleClickOutside","event","current","contains","target","document","addEventListener","removeEventListener","taskCircleId","setTaskCircleId","loading","setLoading","response","fetch","json","id","handleYearSelect","handleMonthSelect","handlePhaseSelect","handleExportExcel","tasks","exportData","forEach","Array","isArray","steps","length","step","push","task_name","task_step","startdate","enddate","responsibility","taskstate","iscomplete","islate","priority","remark","worksheet","utils","json_to_sheet","workbook","book_new","book_append_sheet","writeFile","ref","type","placeholder","value","onChange","e","map","style","marginLeft","backgroundColor","onClose","onTaskSelect","_c","$RefreshReg$"],"sources":["E:/TraeProjects/DevelopmentDashboard/frontend/src/components/Header.js"],"sourcesContent":["import React from 'react';\r\nimport './Header.css';\r\nimport { useState, useEffect, useRef } from 'react';\r\nimport {\r\n  getYears,\r\n  getMonthsByYear,\r\n  getPhasesByYearAndMonth,\r\n  checkYearMonthPhaseExists,\r\n  createTaskCircle,\r\n  deleteTaskCircle\r\n} from '../services/taskCircleService.js';\r\nimport { BASE_URL, getTaskCircleStats } from '../services/taskService.js';\r\nimport * as XLSX from 'xlsx';\r\nimport { getTasks } from '../services/taskService.js';\r\nimport StagingArea from './StagingArea.js';\r\nimport SearchPanel from './SearchPanel.js';\r\n\r\nexport default function Header({ onTaskCircleChange }) {\r\n  // 状态管理\r\n  const [years, setYears] = useState([]);\r\n  const [months, setMonths] = useState([]);\r\n  const [phases, setPhases] = useState([]);\r\n  const [selectedYear, setSelectedYear] = useState('');\r\n  const [selectedMonth, setSelectedMonth] = useState('');\r\n  const [selectedPhase, setSelectedPhase] = useState('');\r\n  const [yearInput, setYearInput] = useState('');\r\n  const [monthInput, setMonthInput] = useState('');\r\n  const [phaseInput, setPhaseInput] = useState('');\r\n  const [isAddPlanEnabled, setIsAddPlanEnabled] = useState(false);\r\n  const [showYearDropdown, setShowYearDropdown] = useState(false);\r\n  const [showMonthDropdown, setShowMonthDropdown] = useState(false);\r\n  const [showPhaseDropdown, setShowPhaseDropdown] = useState(false);\r\n  const [showSuccessMessage, setShowSuccessMessage] = useState(false);\r\n  const [successInfo, setSuccessInfo] = useState({ year: '', month: '', phase: '' });\r\n  // 新增：用于区分是添加还是删除操作的状态\r\n  const [isAddOperation, setIsAddOperation] = useState(true);\r\n\r\n  // 引用\r\n  const yearRef = useRef(null);\r\n  const monthRef = useRef(null);\r\n  const phaseRef = useRef(null);\r\n\r\n  // 处理打开暂存区\r\n  const [showStagingArea, setShowStagingArea] = useState(false);\r\n  \r\n  const handleOpenStaging = () => {\r\n    setShowStagingArea(true);\r\n  };\r\n  \r\n  const handleCloseStagingArea = () => {\r\n    setShowStagingArea(false);\r\n  };\r\n  \r\n  // 处理搜索面板\r\n  const [showSearchPanel, setShowSearchPanel] = useState(false);\r\n  \r\n  const handleOpenSearch = () => {\r\n    setShowSearchPanel(true);\r\n  };\r\n  \r\n  const handleCloseSearch = () => {\r\n    setShowSearchPanel(false);\r\n  };\r\n  \r\n  // 处理任务选择（从搜索结果跳转）\r\n  const handleTaskSelect = async (task) => {\r\n    try {\r\n      // 设置年份并加载对应的月份\r\n      setSelectedYear(task.year.toString());\r\n      const monthsData = await getMonthsByYear(task.year);\r\n      setMonths(monthsData);\r\n      \r\n      // 设置月份并加载对应的阶段\r\n      setSelectedMonth(task.month.toString());\r\n      const phasesData = await getPhasesByYearAndMonth(task.year, task.month);\r\n      setPhases(phasesData);\r\n      \r\n      // 设置阶段\r\n      setSelectedPhase(task.phase.toString());\r\n      \r\n      // 触发任务圈变化，加载对应的任务数据\r\n      if (onTaskCircleChange) {\r\n        onTaskCircleChange(task.task_circle_id, true);\r\n        // 延迟一下再设置为false，确保数据加载完成\r\n        setTimeout(() => {\r\n          onTaskCircleChange(task.task_circle_id, false);\r\n        }, 500);\r\n      }\r\n    } catch (error) {\r\n      console.error('跳转到任务失败:', error);\r\n      alert('跳转到任务失败，请稍后再试');\r\n    }\r\n  };\r\n\r\n  // 组件加载时获取年份\r\n  useEffect(() => {\r\n    const fetchYears = async () => {\r\n      const data = await getYears();\r\n      setYears(data);\r\n    };\r\n    fetchYears();\r\n  }, []);\r\n\r\n  // 监听成功消息显示状态\r\n  useEffect(() => {\r\n    let timer;\r\n    if (showSuccessMessage) {\r\n      timer = setTimeout(() => {\r\n        setShowSuccessMessage(false);\r\n      }, 3000); // 3秒后自动隐藏\r\n    }\r\n    return () => clearTimeout(timer);\r\n  }, [showSuccessMessage]);\r\n\r\n  // 监听年份变化，更新月份\r\n  useEffect(() => {\r\n    if (selectedYear) {\r\n      const fetchMonths = async () => {\r\n        const data = await getMonthsByYear(selectedYear);\r\n        setMonths(data);\r\n        setSelectedMonth('');\r\n        setPhases([]);\r\n        setSelectedPhase('');\r\n      };\r\n      fetchMonths();\r\n    } else {\r\n      setMonths([]);\r\n      setPhases([]);\r\n    }\r\n  }, [selectedYear]);\r\n\r\n  // 监听月份变化，更新阶段\r\n  useEffect(() => {\r\n    if (selectedYear && selectedMonth) {\r\n      const fetchPhases = async () => {\r\n        const data = await getPhasesByYearAndMonth(selectedYear, selectedMonth);\r\n        setPhases(data);\r\n        setSelectedPhase('');\r\n      };\r\n      fetchPhases();\r\n    } else if (selectedYear) {\r\n      setPhases([]);\r\n    }\r\n  }, [selectedYear, selectedMonth]);\r\n\r\n  // 监听输入变化，检查是否存在匹配数据\r\n  // 增加状态，跟踪是否可以删除计划\r\n  const [isDeletePlanEnabled, setIsDeletePlanEnabled] = useState(false);\r\n  \r\n  // 修改监听输入变化的 useEffect，同时检查是否可以删除计划\r\n  useEffect(() => {\r\n    if (yearInput && monthInput && phaseInput) {\r\n      const checkExists = async () => {\r\n        try {\r\n          console.log('检查数据是否存在:', yearInput, monthInput, phaseInput);\r\n          const exists = await checkYearMonthPhaseExists(\r\n            yearInput,\r\n            monthInput,\r\n            phaseInput\r\n          );\r\n          console.log('数据存在结果:', exists);\r\n          // 只有当数据不存在时才启用添加按钮\r\n          setIsAddPlanEnabled(!exists);\r\n          // 只有当数据存在时才启用删除按钮\r\n          setIsDeletePlanEnabled(exists);\r\n          console.log('添加按钮状态:', !exists);\r\n          console.log('删除按钮状态:', exists);\r\n        } catch (error) {\r\n          console.error('检查年月阶段失败:', error);\r\n          // 发生错误时禁用按钮\r\n          setIsAddPlanEnabled(false);\r\n          setIsDeletePlanEnabled(false);\r\n        }\r\n      };\r\n      checkExists();\r\n    } else {\r\n      setIsAddPlanEnabled(false);\r\n      setIsDeletePlanEnabled(false);\r\n      console.log('输入不完整，禁用按钮');\r\n    }\r\n  }, [yearInput, monthInput, phaseInput]);\r\n  \r\n  // 处理删除计划按钮点击\r\n  const handleDeletePlan = async () => {\r\n    if (isDeletePlanEnabled) {\r\n      try {\r\n        // 显示确认对话框\r\n        if (window.confirm(`确定要删除 ${yearInput}年${monthInput}月${phaseInput} 计划及其所有任务和步骤吗？`)) {\r\n          // 删除计划\r\n          await deleteTaskCircle(yearInput, monthInput, phaseInput);\r\n          \r\n          // 保存成功信息\r\n          setSuccessInfo({\r\n            year: yearInput,\r\n            month: monthInput,\r\n            phase: phaseInput\r\n          });\r\n          // 设置为删除操作\r\n          setIsAddOperation(false);\r\n          setShowSuccessMessage(true);\r\n          \r\n          // 通知父组件刷新表格\r\n          if (onTaskCircleChange) {\r\n            onTaskCircleChange('', false);\r\n          }\r\n          \r\n          // 成功后刷新列表\r\n          // 刷新年份列表\r\n          const yearsData = await getYears();\r\n          setYears(yearsData);\r\n          \r\n          // 如果有选择年份，刷新月份列表\r\n          if (yearInput) {\r\n            const monthsData = await getMonthsByYear(yearInput);\r\n            setMonths(monthsData);\r\n            \r\n            // 如果有选择月份，刷新阶段列表\r\n            if (monthInput) {\r\n              const phasesData = await getPhasesByYearAndMonth(yearInput, monthInput);\r\n              setPhases(phasesData);\r\n            }\r\n          }\r\n          \r\n          // 重置输入\r\n          setYearInput('');\r\n          setMonthInput('');\r\n          setPhaseInput('');\r\n        }\r\n      } catch (error) {\r\n        console.error('删除计划失败:', error);\r\n        alert('删除计划失败，请稍后再试。');\r\n      }\r\n    }\r\n  };\r\n  \r\n  // 修改渲染部分，添加删除计划按钮\r\n  // 在 return 语句中的适当位置添加\r\n  <button\r\n    className=\"delete-plan-button\"\r\n    onClick={handleDeletePlan}\r\n    disabled={!isDeletePlanEnabled}\r\n  >\r\n    删除计划\r\n  </button>\r\n    const handleAddPlan = async () => {\r\n      if (isAddPlanEnabled) {\r\n        try {\r\n          // 创建新计划\r\n          await createTaskCircle(yearInput, monthInput, phaseInput);\r\n          \r\n          // 保存成功信息\r\n          setSuccessInfo({\r\n            year: yearInput,\r\n            month: monthInput,\r\n            phase: phaseInput\r\n          });\r\n          // 设置为添加操作\r\n          setIsAddOperation(true);\r\n          setShowSuccessMessage(true);\r\n          \r\n          // 成功后获取新计划的task_circle_id并设置\r\n          await getTaskCircleId(yearInput, monthInput, phaseInput);\r\n          \r\n          // 成功后更新按钮状态\r\n          setIsAddPlanEnabled(false);\r\n          setIsDeletePlanEnabled(true);\r\n          \r\n          // 成功后刷新列表\r\n          // 刷新年份列表\r\n          const yearsData = await getYears();\r\n          setYears(yearsData);\r\n          \r\n          // 如果有选择年份，刷新月份列表\r\n          if (yearInput) {\r\n            const monthsData = await getMonthsByYear(yearInput);\r\n            setMonths(monthsData);\r\n            \r\n            // 如果有选择月份，刷新阶段列表\r\n            if (monthInput) {\r\n              const phasesData = await getPhasesByYearAndMonth(yearInput, monthInput);\r\n              setPhases(phasesData);\r\n            }\r\n          }\r\n        } catch (error) {\r\n          console.error('添加计划失败:', error);\r\n          alert('添加计划失败，请稍后再试。');\r\n        }\r\n      }\r\n    };\r\n\r\n    // 点击空白处关闭下拉菜单\r\n    useEffect(() => {\r\n      const handleClickOutside = (event) => {\r\n        if (\r\n          yearRef.current && !yearRef.current.contains(event.target)\r\n        ) {\r\n          setShowYearDropdown(false);\r\n        }\r\n        if (\r\n          monthRef.current && !monthRef.current.contains(event.target)\r\n        ) {\r\n          setShowMonthDropdown(false);\r\n        }\r\n        if (\r\n          phaseRef.current && !phaseRef.current.contains(event.target)\r\n        ) {\r\n          setShowPhaseDropdown(false);\r\n        }\r\n      };\r\n    \r\n      document.addEventListener('mousedown', handleClickOutside);\r\n      return () => {\r\n        document.removeEventListener('mousedown', handleClickOutside);\r\n      };\r\n    }, []);\r\n\r\n    // 处理年份选择\r\n    // 添加状态管理\r\n    const [taskCircleId, setTaskCircleId] = useState('');\r\n    const [loading, setLoading] = useState(false);\r\n    // 删除统计数据状态\r\n    // const [stats, setStats] = useState(null);\r\n\r\n    // 添加获取 task_circle_id 的函数\r\n    const getTaskCircleId = async (year, month, phase) => {\r\n      try {\r\n        setLoading(true);\r\n        if (onTaskCircleChange) {\r\n          onTaskCircleChange('', true);\r\n        }\r\n        const response = await fetch(`${BASE_URL}/task_circle/id?year=${year}&month=${month}&phase=${phase}`);\r\n        const data = await response.json();\r\n        setTaskCircleId(data.id);\r\n        \r\n        // 删除以下几行\r\n        // if (data.id) {\r\n        //   const statsData = await getTaskCircleStats(data.id);\r\n        //   setStats(statsData);\r\n        // }\r\n        \r\n        if (onTaskCircleChange) {\r\n          onTaskCircleChange(data.id, false);\r\n        }\r\n        return data.id;\r\n      } catch (error) {\r\n        console.error('获取 task_circle_id 失败:', error);\r\n        if (onTaskCircleChange) {\r\n          onTaskCircleChange('', false);\r\n        }\r\n        return '';\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    // 修改 handleYearSelect、handleMonthSelect、handlePhaseSelect 函数\r\n    const handleYearSelect = (year) => {\r\n      setSelectedYear(year);\r\n      setYearInput(year);\r\n      setShowYearDropdown(false);\r\n      if (year && selectedMonth && selectedPhase) {\r\n        getTaskCircleId(year, selectedMonth, selectedPhase);\r\n      }\r\n    };\r\n\r\n    const handleMonthSelect = (month) => {\r\n      setSelectedMonth(month);\r\n      setMonthInput(month);\r\n      setShowMonthDropdown(false);\r\n      if (selectedYear && month && selectedPhase) {\r\n        getTaskCircleId(selectedYear, month, selectedPhase);\r\n      }\r\n    };\r\n\r\n    const handlePhaseSelect = (phase) => {\r\n      setSelectedPhase(phase);\r\n      setPhaseInput(phase);\r\n      setShowPhaseDropdown(false);\r\n      if (selectedYear && selectedMonth && phase) {\r\n        getTaskCircleId(selectedYear, selectedMonth, phase);\r\n      }\r\n    };\r\n\r\n    const handleExportExcel = async () => {\r\n      if (!taskCircleId) return;\r\n\r\n      try {\r\n        // 获取当前计划的任务和步骤数据\r\n        const tasks = await getTasks(taskCircleId);\r\n\r\n        // 准备导出数据（展平任务和步骤关系）\r\n        const exportData = [];\r\n        tasks.forEach(task => {\r\n          // 检查是否有步骤数组\r\n          if (Array.isArray(task.steps) && task.steps.length > 0) {\r\n            // 有步骤，遍历步骤\r\n            task.steps.forEach(step => {\r\n              exportData.push({\r\n                '任务名称': task.task_name,\r\n                '步骤名称': step.task_step,\r\n                '开始日期': step.startdate || '',\r\n                '截止日期': step.enddate || '',\r\n                '负责人': step.responsibility || '',\r\n                '状态': step.taskstate || '',\r\n                '是否完成': step.iscomplete || '',\r\n                '是否逾期': step.islate || '',\r\n                '优先级': step.priority || '',\r\n                '备注': step.remark || ''\r\n              });\r\n            });\r\n          } else {\r\n            // 没有步骤，添加仅包含任务信息的条目\r\n            exportData.push({\r\n              '任务名称': task.task_name,\r\n              '步骤名称': '',\r\n              '开始日期': '',\r\n              '截止日期': '',\r\n              '负责人': '',\r\n              '状态': '',\r\n              '是否完成': '',\r\n              '是否逾期': '',\r\n              '优先级': '',\r\n              '备注': ''\r\n            });\r\n          }\r\n        });\r\n\r\n        // 创建工作簿和工作表\r\n        const worksheet = XLSX.utils.json_to_sheet(exportData);\r\n        const workbook = XLSX.utils.book_new();\r\n        XLSX.utils.book_append_sheet(workbook, worksheet, '任务步骤列表');\r\n\r\n        // 生成文件名（当前年月阶段）\r\n        const fileName = `${yearInput}年${monthInput}月第${phaseInput}阶段任务步骤.xlsx`;\r\n\r\n        // 导出并下载\r\n        XLSX.writeFile(workbook, fileName);\r\n      } catch (error) {\r\n        console.error('导出Excel失败:', error);\r\n        alert('导出Excel失败，请稍后再试');\r\n      }\r\n    };\r\n\r\n    return (\r\n      <>\r\n      <div className=\"header-container\">\r\n        {loading && <div className=\"loading-overlay\">加载中...</div>}\r\n        <div className=\"title-wrapper\">\r\n          <h2 className=\"title\">\r\n            <div className=\"dropdown-container\" ref={yearRef}>\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"年\"\r\n                value={yearInput}\r\n                onChange={(e) => {\r\n                  setYearInput(e.target.value);\r\n                  setSelectedYear('');\r\n                }}\r\n                onClick={() => setShowYearDropdown(!showYearDropdown)}\r\n              />\r\n              <span className=\"label\">年</span>\r\n              {showYearDropdown && (\r\n                <div className=\"dropdown\">\r\n                  {years.map((year) => (\r\n                    <div\r\n                      key={year}\r\n                      className=\"dropdown-item\"\r\n                      onClick={() => handleYearSelect(year)}\r\n                    >\r\n                      {year}\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              )}\r\n            </div>\r\n            <div className=\"dropdown-container\" ref={monthRef}>\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"月\"\r\n                value={monthInput}\r\n                onChange={(e) => {\r\n                  setMonthInput(e.target.value);\r\n                  setSelectedMonth('');\r\n                }}\r\n                onClick={() => setShowMonthDropdown(!showMonthDropdown)}\r\n              />\r\n              <span className=\"label\">月</span>\r\n              {showMonthDropdown && (\r\n                <div className=\"dropdown\">\r\n                  {months.map((month) => (\r\n                    <div\r\n                      key={month}\r\n                      className=\"dropdown-item\"\r\n                      onClick={() => handleMonthSelect(month)}\r\n                    >\r\n                      {month}\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              )}\r\n            </div>\r\n            <div className=\"dropdown-container\" ref={phaseRef}>\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"阶段\"\r\n                value={phaseInput}\r\n                onChange={(e) => {\r\n                  setPhaseInput(e.target.value);\r\n                  setSelectedPhase('');\r\n                }}\r\n                onClick={() => setShowPhaseDropdown(!showPhaseDropdown)}\r\n              />\r\n              <span className=\"label\">阶段项目交付及产品研发计划</span>\r\n              {showPhaseDropdown && (\r\n                <div className=\"dropdown\">\r\n                  {phases.map((phase) => (\r\n                    <div\r\n                      key={phase}\r\n                      className=\"dropdown-item\"\r\n                      onClick={() => handlePhaseSelect(phase)}\r\n                    >\r\n                      第{phase}阶段\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              )}\r\n            </div>\r\n          </h2>\r\n          {/* 显示成功信息 */}\r\n          {showSuccessMessage && (\r\n            <div className=\"success-message\">\r\n              {isAddOperation ? '计划添加成功' : '计划删除成功'}: {successInfo.year}年{successInfo.month}月 第{successInfo.phase}阶段\r\n            </div>\r\n          )}\r\n        </div>\r\n        <button\r\n          className=\"add-plan\"\r\n          onClick={handleAddPlan}\r\n          disabled={!isAddPlanEnabled}\r\n        >\r\n          增加计划\r\n        </button>\r\n        <button\r\n          className=\"add-plan\"\r\n          onClick={handleDeletePlan}\r\n          disabled={!isDeletePlanEnabled}\r\n          style={{ marginLeft: '10px' }}\r\n        >\r\n          删除计划\r\n        </button>\r\n        {/* 添加导出按钮 */}\r\n        <button\r\n          className=\"add-plan\"\r\n          onClick={handleExportExcel}\r\n          disabled={!isDeletePlanEnabled}\r\n          style={{ marginLeft: '10px' }}\r\n        >\r\n          导出表格\r\n        </button>\r\n        {/* 添加暂存区按钮 */}\r\n        <button\r\n          className=\"add-plan\"\r\n          onClick={handleOpenStaging}\r\n          style={{ marginLeft: '10px', backgroundColor: '#fa8c16' }}\r\n        >\r\n          暂存区\r\n        </button>\r\n        {/* 添加搜索按钮 */}\r\n        <button\r\n          className=\"add-plan\"\r\n          onClick={handleOpenSearch}\r\n          style={{ marginLeft: '10px', backgroundColor: '#52c41a' }}\r\n        >\r\n          检索\r\n        </button>\r\n      </div>\r\n      \r\n      {/* 暂存区界面 */}\r\n      {showStagingArea && (\r\n        <StagingArea onClose={handleCloseStagingArea} />\r\n      )}\r\n      \r\n      {/* 搜索面板 */}\r\n      {showSearchPanel && (\r\n        <SearchPanel \r\n          onClose={handleCloseSearch} \r\n          onTaskSelect={handleTaskSelect}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}