{"ast":null,"code":"// 创建taskCircle服务\nconst fetch = require('node-fetch');\n\n// 基础URL\nconst BASE_URL = 'http://localhost:5000';\n\n// 获取年份列表\nexport const getYears = async () => {\n  try {\n    const response = await fetch(`${BASE_URL}/task_circle/years`);\n    return await response.json();\n  } catch (error) {\n    console.error('获取年份列表失败:', error);\n    return [];\n  }\n};\n\n// 根据年份获取月份列表\nexport const getMonthsByYear = async year => {\n  try {\n    const response = await fetch(`${BASE_URL}/task_circle/months?year=${year}`);\n    return await response.json();\n  } catch (error) {\n    console.error('获取月份列表失败:', error);\n    return [];\n  }\n};\n\n// 根据年份和月份获取阶段列表\nexport const getPhasesByYearAndMonth = async (year, month) => {\n  try {\n    const response = await fetch(`${BASE_URL}/task_circle/phases?year=${year}&month=${month}`);\n    return await response.json();\n  } catch (error) {\n    console.error('获取阶段列表失败:', error);\n    return [];\n  }\n};\n\n// 检查年月阶段是否存在\nexport const checkYearMonthPhaseExists = async (year, month, phase) => {\n  try {\n    const response = await fetch(`${BASE_URL}/task_circle/check?year=${year}&month=${month}&phase=${phase}`);\n    return await response.json();\n  } catch (error) {\n    console.error('检查年月阶段失败:', error);\n    return false;\n  }\n};","map":{"version":3,"names":["fetch","require","BASE_URL","getYears","response","json","error","console","getMonthsByYear","year","getPhasesByYearAndMonth","month","checkYearMonthPhaseExists","phase"],"sources":["E:/TraeProjects/DevelopmentDashboard/frontend/src/services/taskCircleService.js"],"sourcesContent":["// 创建taskCircle服务\r\nconst fetch = require('node-fetch');\r\n\r\n// 基础URL\r\nconst BASE_URL = 'http://localhost:5000';\r\n\r\n// 获取年份列表\r\nexport const getYears = async () => {\r\n  try {\r\n    const response = await fetch(`${BASE_URL}/task_circle/years`);\r\n    return await response.json();\r\n  } catch (error) {\r\n    console.error('获取年份列表失败:', error);\r\n    return [];\r\n  }\r\n};\r\n\r\n// 根据年份获取月份列表\r\nexport const getMonthsByYear = async (year) => {\r\n  try {\r\n    const response = await fetch(`${BASE_URL}/task_circle/months?year=${year}`);\r\n    return await response.json();\r\n  } catch (error) {\r\n    console.error('获取月份列表失败:', error);\r\n    return [];\r\n  }\r\n};\r\n\r\n// 根据年份和月份获取阶段列表\r\nexport const getPhasesByYearAndMonth = async (year, month) => {\r\n  try {\r\n    const response = await fetch(`${BASE_URL}/task_circle/phases?year=${year}&month=${month}`);\r\n    return await response.json();\r\n  } catch (error) {\r\n    console.error('获取阶段列表失败:', error);\r\n    return [];\r\n  }\r\n};\r\n\r\n// 检查年月阶段是否存在\r\nexport const checkYearMonthPhaseExists = async (year, month, phase) => {\r\n  try {\r\n    const response = await fetch(`${BASE_URL}/task_circle/check?year=${year}&month=${month}&phase=${phase}`);\r\n    return await response.json();\r\n  } catch (error) {\r\n    console.error('检查年月阶段失败:', error);\r\n    return false;\r\n  }\r\n};"],"mappings":"AAAA;AACA,MAAMA,KAAK,GAAGC,OAAO,CAAC,YAAY,CAAC;;AAEnC;AACA,MAAMC,QAAQ,GAAG,uBAAuB;;AAExC;AACA,OAAO,MAAMC,QAAQ,GAAG,MAAAA,CAAA,KAAY;EAClC,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMJ,KAAK,CAAC,GAAGE,QAAQ,oBAAoB,CAAC;IAC7D,OAAO,MAAME,QAAQ,CAACC,IAAI,CAAC,CAAC;EAC9B,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,WAAW,EAAEA,KAAK,CAAC;IACjC,OAAO,EAAE;EACX;AACF,CAAC;;AAED;AACA,OAAO,MAAME,eAAe,GAAG,MAAOC,IAAI,IAAK;EAC7C,IAAI;IACF,MAAML,QAAQ,GAAG,MAAMJ,KAAK,CAAC,GAAGE,QAAQ,4BAA4BO,IAAI,EAAE,CAAC;IAC3E,OAAO,MAAML,QAAQ,CAACC,IAAI,CAAC,CAAC;EAC9B,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,WAAW,EAAEA,KAAK,CAAC;IACjC,OAAO,EAAE;EACX;AACF,CAAC;;AAED;AACA,OAAO,MAAMI,uBAAuB,GAAG,MAAAA,CAAOD,IAAI,EAAEE,KAAK,KAAK;EAC5D,IAAI;IACF,MAAMP,QAAQ,GAAG,MAAMJ,KAAK,CAAC,GAAGE,QAAQ,4BAA4BO,IAAI,UAAUE,KAAK,EAAE,CAAC;IAC1F,OAAO,MAAMP,QAAQ,CAACC,IAAI,CAAC,CAAC;EAC9B,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,WAAW,EAAEA,KAAK,CAAC;IACjC,OAAO,EAAE;EACX;AACF,CAAC;;AAED;AACA,OAAO,MAAMM,yBAAyB,GAAG,MAAAA,CAAOH,IAAI,EAAEE,KAAK,EAAEE,KAAK,KAAK;EACrE,IAAI;IACF,MAAMT,QAAQ,GAAG,MAAMJ,KAAK,CAAC,GAAGE,QAAQ,2BAA2BO,IAAI,UAAUE,KAAK,UAAUE,KAAK,EAAE,CAAC;IACxG,OAAO,MAAMT,QAAQ,CAACC,IAAI,CAAC,CAAC;EAC9B,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,WAAW,EAAEA,KAAK,CAAC;IACjC,OAAO,KAAK;EACd;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}