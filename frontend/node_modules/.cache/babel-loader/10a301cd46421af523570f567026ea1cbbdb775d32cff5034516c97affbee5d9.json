{"ast":null,"code":"var _jsxFileName = \"E:\\\\TraeProjects\\\\DevelopmentDashboard\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './App.css';\nimport Header from './components/Header.js';\nimport TableComponent from './components/TableComponent.js'; // 导入表格组件\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [selectedTaskCircle, setSelectedTaskCircle] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [taskCircleId, setTaskCircleId] = useState(null);\n\n  // 处理年、月、阶段变化\n  const handleYearMonthPhaseChange = async (year, month, phase) => {\n    setLoading(true);\n    try {\n      // 这里应该调用API获取选中的任务周期的id\n      // 为了简化，我们假设已经有了这个API\n      // const response = await fetch(`http://localhost:5000/task_circle/getId?year=${year}&month=${month}&phase=${phase}`);\n      // const data = await response.json();\n      // setTaskCircleId(data.id);\n\n      // 暂时使用模拟数据\n      setTaskCircleId(1);\n      setSelectedTaskCircle({\n        year,\n        month,\n        phase\n      });\n    } catch (error) {\n      console.error('获取任务周期id失败:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      onYearMonthPhaseChange: handleYearMonthPhaseChange,\n      loading: loading\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-content\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"left-column\",\n        children: /*#__PURE__*/_jsxDEV(TableComponent, {\n          taskCircleId: taskCircleId,\n          selectedTaskCircle: selectedTaskCircle,\n          loading: loading\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"OllTrieDLmJS8P0EdTc7u7rbH6M=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Header","TableComponent","jsxDEV","_jsxDEV","App","_s","selectedTaskCircle","setSelectedTaskCircle","loading","setLoading","taskCircleId","setTaskCircleId","handleYearMonthPhaseChange","year","month","phase","error","console","className","children","onYearMonthPhaseChange","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["E:/TraeProjects/DevelopmentDashboard/frontend/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport './App.css';\r\nimport Header from './components/Header.js';\r\nimport TableComponent from './components/TableComponent.js'; // 导入表格组件\r\n\r\nfunction App() {\r\n  const [selectedTaskCircle, setSelectedTaskCircle] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n  const [taskCircleId, setTaskCircleId] = useState(null);\r\n\r\n  // 处理年、月、阶段变化\r\n  const handleYearMonthPhaseChange = async (year, month, phase) => {\r\n    setLoading(true);\r\n    try {\r\n      // 这里应该调用API获取选中的任务周期的id\r\n      // 为了简化，我们假设已经有了这个API\r\n      // const response = await fetch(`http://localhost:5000/task_circle/getId?year=${year}&month=${month}&phase=${phase}`);\r\n      // const data = await response.json();\r\n      // setTaskCircleId(data.id);\r\n      \r\n      // 暂时使用模拟数据\r\n      setTaskCircleId(1);\r\n      setSelectedTaskCircle({ year, month, phase });\r\n    } catch (error) {\r\n      console.error('获取任务周期id失败:', error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Header \r\n        onYearMonthPhaseChange={handleYearMonthPhaseChange} \r\n        loading={loading} \r\n      />\r\n      <div className=\"main-content\">\r\n        <div className=\"left-column\">\r\n          <TableComponent \r\n            taskCircleId={taskCircleId} \r\n            selectedTaskCircle={selectedTaskCircle} \r\n            loading={loading} \r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,WAAW;AAClB,OAAOC,MAAM,MAAM,wBAAwB;AAC3C,OAAOC,cAAc,MAAM,gCAAgC,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE7D,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,kBAAkB,EAAEC,qBAAqB,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EAClE,MAAM,CAACS,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACW,YAAY,EAAEC,eAAe,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;;EAEtD;EACA,MAAMa,0BAA0B,GAAG,MAAAA,CAAOC,IAAI,EAAEC,KAAK,EAAEC,KAAK,KAAK;IAC/DN,UAAU,CAAC,IAAI,CAAC;IAChB,IAAI;MACF;MACA;MACA;MACA;MACA;;MAEA;MACAE,eAAe,CAAC,CAAC,CAAC;MAClBJ,qBAAqB,CAAC;QAAEM,IAAI;QAAEC,KAAK;QAAEC;MAAM,CAAC,CAAC;IAC/C,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,aAAa,EAAEA,KAAK,CAAC;IACrC,CAAC,SAAS;MACRP,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;EAED,oBACEN,OAAA;IAAKe,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClBhB,OAAA,CAACH,MAAM;MACLoB,sBAAsB,EAAER,0BAA2B;MACnDJ,OAAO,EAAEA;IAAQ;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClB,CAAC,eACFrB,OAAA;MAAKe,SAAS,EAAC,cAAc;MAAAC,QAAA,eAC3BhB,OAAA;QAAKe,SAAS,EAAC,aAAa;QAAAC,QAAA,eAC1BhB,OAAA,CAACF,cAAc;UACbS,YAAY,EAAEA,YAAa;UAC3BJ,kBAAkB,EAAEA,kBAAmB;UACvCE,OAAO,EAAEA;QAAQ;UAAAa,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAClB;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACnB,EAAA,CA1CQD,GAAG;AAAAqB,EAAA,GAAHrB,GAAG;AA4CZ,eAAeA,GAAG;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}