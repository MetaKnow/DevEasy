{"ast":null,"code":"var _jsxFileName = \"E:\\\\TraeProjects\\\\DevelopmentDashboard\\\\frontend\\\\src\\\\components\\\\TableComponent.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect, useState } from 'react';\nimport './TableComponent.css';\n\n// 假设我们有这些API函数\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst fetchTasksByTaskCircleId = async taskCircleId => {\n  try {\n    const response = await fetch(`http://localhost:5000/task/getByTaskCircleId?taskCircleId=${taskCircleId}`);\n    return await response.json();\n  } catch (error) {\n    console.error('获取任务列表失败:', error);\n    return [];\n  }\n};\nconst createTask = async (taskName, taskCircleId) => {\n  try {\n    const response = await fetch('http://localhost:5000/task/create', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        task_name: taskName,\n        task_circle_id: taskCircleId\n      })\n    });\n    return await response.json();\n  } catch (error) {\n    console.error('创建任务失败:', error);\n    throw error;\n  }\n};\nconst createStep = async (stepData, taskId, taskCircleId) => {\n  try {\n    const response = await fetch('http://localhost:5000/dashboard/create', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        ...stepData,\n        task_id: taskId,\n        task_circle_id: taskCircleId\n      })\n    });\n    return await response.json();\n  } catch (error) {\n    console.error('创建步骤失败:', error);\n    throw error;\n  }\n};\nconst TableComponent = ({\n  taskCircleId,\n  selectedTaskCircle,\n  loading\n}) => {\n  _s();\n  const tableRef = useRef(null);\n  const [showAddTaskRow, setShowAddTaskRow] = useState(false);\n  const [showAddStepRow, setShowAddStepRow] = useState(null); // 存储当前要添加步骤的任务ID\n  const [newTaskName, setNewTaskName] = useState('');\n  const [newStepData, setNewStepData] = useState({\n    task_step: '',\n    startdate: '',\n    enddate: '',\n    responsibility: '',\n    taskstate: '',\n    iscomplete: false,\n    islate: false,\n    priority: '',\n    remark: ''\n  });\n  // 添加编辑状态管理\n  const [editingCell, setEditingCell] = useState(null); // 存储当前编辑的单元格信息 {taskId, stepId, field}\n  const [editValue, setEditValue] = useState(''); // 存储当前编辑的值\n\n  // 数据数组\n  const [tableData, setTableData] = useState([]);\n\n  // 列宽调整功能保持不变\n  useEffect(() => {\n    if (!tableRef.current) return;\n    const table = tableRef.current;\n    const cols = table.querySelectorAll('th');\n    let isResizing = false;\n    let currentCol = null;\n    let startX = 0;\n    let startWidth = 0;\n    const handleMouseDown = e => {\n      if (e.target.classList.contains('resizer')) {\n        isResizing = true;\n        currentCol = e.target.parentElement;\n        startX = e.pageX;\n        startWidth = currentCol.offsetWidth;\n        document.body.style.cursor = 'col-resize';\n      }\n    };\n    const handleMouseMove = e => {\n      if (!isResizing) return;\n      const width = startWidth + (e.pageX - startX);\n      if (width > 50) {\n        currentCol.style.width = `${width}px`;\n      }\n    };\n    const handleMouseUp = () => {\n      isResizing = false;\n      document.body.style.cursor = '';\n    };\n    table.addEventListener('mousedown', handleMouseDown);\n    document.addEventListener('mousemove', handleMouseMove);\n    document.addEventListener('mouseup', handleMouseUp);\n    return () => {\n      table.removeEventListener('mousedown', handleMouseDown);\n      document.removeEventListener('mousemove', handleMouseMove);\n      document.removeEventListener('mouseup', handleMouseUp);\n    };\n  }, []);\n\n  // 监听 taskCircleId 变化，加载相关的任务和步骤\n  useEffect(() => {\n    if (taskCircleId) {\n      const loadData = async () => {\n        const tasks = await fetchTasksByTaskCircleId(taskCircleId);\n        setTableData(tasks);\n      };\n      loadData();\n    } else {\n      setTableData([]);\n    }\n  }, [taskCircleId]);\n  const handleAddTask = async () => {\n    if (newTaskName.trim() && taskCircleId) {\n      try {\n        // 创建新任务\n        const newTask = await createTask(newTaskName, taskCircleId);\n\n        // 添加新任务到表格数据\n        setTableData([...tableData, {\n          id: newTask.id,\n          task_name: newTask.task_name,\n          steps: [] // 初始化步骤数组\n        }]);\n\n        // 重置表单\n        setNewTaskName('');\n        setShowAddTaskRow(false);\n      } catch (error) {\n        console.error('添加任务失败:', error);\n        alert('添加任务失败，请稍后再试。');\n      }\n    }\n  };\n  const handleAddStep = async taskId => {\n    if (taskId && taskCircleId) {\n      try {\n        // 创建新步骤\n        const newStep = await createStep(newStepData, taskId, taskCircleId);\n\n        // 更新表格数据\n        setTableData(tableData.map(task => {\n          if (task.id === taskId) {\n            return {\n              ...task,\n              steps: [...task.steps, newStep]\n            };\n          }\n          return task;\n        }));\n\n        // 重置表单\n        setShowAddStepRow(null);\n        setNewStepData({\n          task_step: '',\n          startdate: '',\n          enddate: '',\n          responsibility: '',\n          taskstate: '',\n          iscomplete: false,\n          islate: false,\n          priority: '',\n          remark: ''\n        });\n      } catch (error) {\n        console.error('添加步骤失败:', error);\n        alert('添加步骤失败，请稍后再试。');\n      }\n    }\n  };\n  const handleSaveStep = taskId => {\n    if (newStepData.task_step.trim()) {\n      // 查找对应的任务\n      const updatedData = tableData.map(task => {\n        if (task.id === taskId) {\n          // 添加新步骤\n          return {\n            ...task,\n            steps: [...task.steps, {\n              ...newStepData,\n              id: Date.now()\n            }]\n          };\n        }\n        return task;\n      });\n      setTableData(updatedData);\n      setShowAddStepRow(null);\n    }\n  };\n\n  // 处理双击单元格事件\n  const handleCellDoubleClick = (taskId, stepId, field, value) => {\n    setEditingCell({\n      taskId,\n      stepId,\n      field\n    });\n    setEditValue(value);\n  };\n\n  // 处理保存编辑\n  const handleSaveEdit = () => {\n    if (!editingCell) return;\n    const {\n      taskId,\n      stepId,\n      field\n    } = editingCell;\n\n    // 更新数据\n    const updatedData = tableData.map(task => {\n      if (task.id === taskId) {\n        // 如果是任务名称字段\n        if (field === 'task_name') {\n          return {\n            ...task,\n            task_name: editValue\n          };\n        }\n        // 如果是步骤字段\n        else if (stepId) {\n          return {\n            ...task,\n            steps: task.steps.map(step => {\n              if (step.id === stepId) {\n                return {\n                  ...step,\n                  [field]: editValue\n                };\n              }\n              return step;\n            })\n          };\n        }\n      }\n      return task;\n    });\n    setTableData(updatedData);\n    setEditingCell(null);\n  };\n\n  // 处理取消编辑\n  const handleCancelEdit = () => {\n    setEditingCell(null);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"table-container\",\n    children: loading && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading-overlay\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading-spinner\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading-text\",\n        children: \"\\u52A0\\u8F7D\\u4E2D...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 268,\n    columnNumber: 5\n  }, this);\n};\n_s(TableComponent, \"jwW/yhD5ux+Ohb3xjRKLIpMbcTQ=\");\n_c = TableComponent;\nexport default TableComponent;\nvar _c;\n$RefreshReg$(_c, \"TableComponent\");","map":{"version":3,"names":["React","useRef","useEffect","useState","jsxDEV","_jsxDEV","fetchTasksByTaskCircleId","taskCircleId","response","fetch","json","error","console","createTask","taskName","method","headers","body","JSON","stringify","task_name","task_circle_id","createStep","stepData","taskId","task_id","TableComponent","selectedTaskCircle","loading","_s","tableRef","showAddTaskRow","setShowAddTaskRow","showAddStepRow","setShowAddStepRow","newTaskName","setNewTaskName","newStepData","setNewStepData","task_step","startdate","enddate","responsibility","taskstate","iscomplete","islate","priority","remark","editingCell","setEditingCell","editValue","setEditValue","tableData","setTableData","current","table","cols","querySelectorAll","isResizing","currentCol","startX","startWidth","handleMouseDown","e","target","classList","contains","parentElement","pageX","offsetWidth","document","style","cursor","handleMouseMove","width","handleMouseUp","addEventListener","removeEventListener","loadData","tasks","handleAddTask","trim","newTask","id","steps","alert","handleAddStep","newStep","map","task","handleSaveStep","updatedData","Date","now","handleCellDoubleClick","stepId","field","value","handleSaveEdit","step","handleCancelEdit","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["E:/TraeProjects/DevelopmentDashboard/frontend/src/components/TableComponent.js"],"sourcesContent":["import React, { useRef, useEffect, useState } from 'react';\r\nimport './TableComponent.css';\r\n\r\n// 假设我们有这些API函数\r\nconst fetchTasksByTaskCircleId = async (taskCircleId) => {\r\n  try {\r\n    const response = await fetch(`http://localhost:5000/task/getByTaskCircleId?taskCircleId=${taskCircleId}`);\r\n    return await response.json();\r\n  } catch (error) {\r\n    console.error('获取任务列表失败:', error);\r\n    return [];\r\n  }\r\n};\r\n\r\nconst createTask = async (taskName, taskCircleId) => {\r\n  try {\r\n    const response = await fetch('http://localhost:5000/task/create', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify({\r\n        task_name: taskName,\r\n        task_circle_id: taskCircleId\r\n      })\r\n    });\r\n    return await response.json();\r\n  } catch (error) {\r\n    console.error('创建任务失败:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nconst createStep = async (stepData, taskId, taskCircleId) => {\r\n  try {\r\n    const response = await fetch('http://localhost:5000/dashboard/create', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify({\r\n        ...stepData,\r\n        task_id: taskId,\r\n        task_circle_id: taskCircleId\r\n      })\r\n    });\r\n    return await response.json();\r\n  } catch (error) {\r\n    console.error('创建步骤失败:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nconst TableComponent = ({ taskCircleId, selectedTaskCircle, loading }) => {\r\n  const tableRef = useRef(null);\r\n  const [showAddTaskRow, setShowAddTaskRow] = useState(false);\r\n  const [showAddStepRow, setShowAddStepRow] = useState(null); // 存储当前要添加步骤的任务ID\r\n  const [newTaskName, setNewTaskName] = useState('');\r\n  const [newStepData, setNewStepData] = useState({\r\n    task_step: '',\r\n    startdate: '',\r\n    enddate: '',\r\n    responsibility: '',\r\n    taskstate: '',\r\n    iscomplete: false,\r\n    islate: false,\r\n    priority: '',\r\n    remark: ''\r\n  });\r\n  // 添加编辑状态管理\r\n  const [editingCell, setEditingCell] = useState(null); // 存储当前编辑的单元格信息 {taskId, stepId, field}\r\n  const [editValue, setEditValue] = useState(''); // 存储当前编辑的值\r\n\r\n  // 数据数组\r\n  const [tableData, setTableData] = useState([]);\r\n\r\n  // 列宽调整功能保持不变\r\n  useEffect(() => {\r\n    if (!tableRef.current) return;\r\n\r\n    const table = tableRef.current;\r\n    const cols = table.querySelectorAll('th');\r\n    let isResizing = false;\r\n    let currentCol = null;\r\n    let startX = 0;\r\n    let startWidth = 0;\r\n\r\n    const handleMouseDown = (e) => {\r\n      if (e.target.classList.contains('resizer')) {\r\n        isResizing = true;\r\n        currentCol = e.target.parentElement;\r\n        startX = e.pageX;\r\n        startWidth = currentCol.offsetWidth;\r\n        document.body.style.cursor = 'col-resize';\r\n      }\r\n    };\r\n\r\n    const handleMouseMove = (e) => {\r\n      if (!isResizing) return;\r\n      const width = startWidth + (e.pageX - startX);\r\n      if (width > 50) {\r\n        currentCol.style.width = `${width}px`;\r\n      }\r\n    };\r\n\r\n    const handleMouseUp = () => {\r\n      isResizing = false;\r\n      document.body.style.cursor = '';\r\n    };\r\n\r\n    table.addEventListener('mousedown', handleMouseDown);\r\n    document.addEventListener('mousemove', handleMouseMove);\r\n    document.addEventListener('mouseup', handleMouseUp);\r\n\r\n    return () => {\r\n      table.removeEventListener('mousedown', handleMouseDown);\r\n      document.removeEventListener('mousemove', handleMouseMove);\r\n      document.removeEventListener('mouseup', handleMouseUp);\r\n    };\r\n  }, []);\r\n\r\n  // 监听 taskCircleId 变化，加载相关的任务和步骤\r\n  useEffect(() => {\r\n    if (taskCircleId) {\r\n      const loadData = async () => {\r\n        const tasks = await fetchTasksByTaskCircleId(taskCircleId);\r\n        setTableData(tasks);\r\n      };\r\n      loadData();\r\n    } else {\r\n      setTableData([]);\r\n    }\r\n  }, [taskCircleId]);\r\n\r\n  const handleAddTask = async () => {\r\n    if (newTaskName.trim() && taskCircleId) {\r\n      try {\r\n        // 创建新任务\r\n        const newTask = await createTask(newTaskName, taskCircleId);\r\n        \r\n        // 添加新任务到表格数据\r\n        setTableData([\r\n          ...tableData,\r\n          {\r\n            id: newTask.id,\r\n            task_name: newTask.task_name,\r\n            steps: [] // 初始化步骤数组\r\n          }\r\n        ]);\r\n\r\n        // 重置表单\r\n        setNewTaskName('');\r\n        setShowAddTaskRow(false);\r\n      } catch (error) {\r\n        console.error('添加任务失败:', error);\r\n        alert('添加任务失败，请稍后再试。');\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleAddStep = async (taskId) => {\r\n    if (taskId && taskCircleId) {\r\n      try {\r\n        // 创建新步骤\r\n        const newStep = await createStep(newStepData, taskId, taskCircleId);\r\n        \r\n        // 更新表格数据\r\n        setTableData(tableData.map(task => {\r\n          if (task.id === taskId) {\r\n            return {\r\n              ...task,\r\n              steps: [...task.steps, newStep]\r\n            };\r\n          }\r\n          return task;\r\n        }));\r\n\r\n        // 重置表单\r\n        setShowAddStepRow(null);\r\n        setNewStepData({\r\n          task_step: '',\r\n          startdate: '',\r\n          enddate: '',\r\n          responsibility: '',\r\n          taskstate: '',\r\n          iscomplete: false,\r\n          islate: false,\r\n          priority: '',\r\n          remark: ''\r\n        });\r\n      } catch (error) {\r\n        console.error('添加步骤失败:', error);\r\n        alert('添加步骤失败，请稍后再试。');\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleSaveStep = (taskId) => {\r\n    if (newStepData.task_step.trim()) {\r\n      // 查找对应的任务\r\n      const updatedData = tableData.map(task => {\r\n        if (task.id === taskId) {\r\n          // 添加新步骤\r\n          return {\r\n            ...task,\r\n            steps: [...task.steps, {...newStepData, id: Date.now()}]\r\n          };\r\n        }\r\n        return task;\r\n      });\r\n\r\n      setTableData(updatedData);\r\n      setShowAddStepRow(null);\r\n    }\r\n  };\r\n\r\n  // 处理双击单元格事件\r\n  const handleCellDoubleClick = (taskId, stepId, field, value) => {\r\n    setEditingCell({ taskId, stepId, field });\r\n    setEditValue(value);\r\n  };\r\n\r\n  // 处理保存编辑\r\n  const handleSaveEdit = () => {\r\n    if (!editingCell) return;\r\n\r\n    const { taskId, stepId, field } = editingCell;\r\n\r\n    // 更新数据\r\n    const updatedData = tableData.map(task => {\r\n      if (task.id === taskId) {\r\n        // 如果是任务名称字段\r\n        if (field === 'task_name') {\r\n          return {\r\n            ...task,\r\n            task_name: editValue\r\n          };\r\n        }\r\n        // 如果是步骤字段\r\n        else if (stepId) {\r\n          return {\r\n            ...task,\r\n            steps: task.steps.map(step => {\r\n              if (step.id === stepId) {\r\n                return {\r\n                  ...step,\r\n                  [field]: editValue\r\n                };\r\n              }\r\n              return step;\r\n            })\r\n          };\r\n        }\r\n      }\r\n      return task;\r\n    });\r\n\r\n    setTableData(updatedData);\r\n    setEditingCell(null);\r\n  };\r\n\r\n  // 处理取消编辑\r\n  const handleCancelEdit = () => {\r\n    setEditingCell(null);\r\n  };\r\n\r\n  return (\r\n    <div className=\"table-container\">\r\n      {/* 显示加载中效果 */}\r\n      {loading && (\r\n        <div className=\"loading-overlay\">\r\n          <div className=\"loading-spinner\"></div>\r\n          <div className=\"loading-text\">加载中...</div>\r\n        </div>\r\n      )}\r\n      \r\n      {/* 表格内容... */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TableComponent;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}