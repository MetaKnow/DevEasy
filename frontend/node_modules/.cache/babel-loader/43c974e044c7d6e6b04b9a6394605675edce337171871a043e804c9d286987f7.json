{"ast":null,"code":"import React from'react';import'./Header.css';import{useState,useEffect,useRef}from'react';import{getYears,getMonthsByYear,getPhasesByYearAndMonth,checkYearMonthPhaseExists,createTaskCircle,deleteTaskCircle}from'../services/taskCircleService.js';import{BASE_URL,getTaskCircleStats}from'../services/taskService.js';import*as XLSX from'xlsx';import{getTasks}from'../services/taskService.js';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";export default function Header(_ref){let{onTaskCircleChange}=_ref;// 状态管理\nconst[years,setYears]=useState([]);const[months,setMonths]=useState([]);const[phases,setPhases]=useState([]);const[selectedYear,setSelectedYear]=useState('');const[selectedMonth,setSelectedMonth]=useState('');const[selectedPhase,setSelectedPhase]=useState('');const[yearInput,setYearInput]=useState('');const[monthInput,setMonthInput]=useState('');const[phaseInput,setPhaseInput]=useState('');const[isAddPlanEnabled,setIsAddPlanEnabled]=useState(false);const[showYearDropdown,setShowYearDropdown]=useState(false);const[showMonthDropdown,setShowMonthDropdown]=useState(false);const[showPhaseDropdown,setShowPhaseDropdown]=useState(false);const[showSuccessMessage,setShowSuccessMessage]=useState(false);const[successInfo,setSuccessInfo]=useState({year:'',month:'',phase:''});// 新增：用于区分是添加还是删除操作的状态\nconst[isAddOperation,setIsAddOperation]=useState(true);// 引用\nconst yearRef=useRef(null);const monthRef=useRef(null);const phaseRef=useRef(null);// 组件加载时获取年份\nuseEffect(()=>{const fetchYears=async()=>{const data=await getYears();setYears(data);};fetchYears();},[]);// 监听成功消息显示状态\nuseEffect(()=>{let timer;if(showSuccessMessage){timer=setTimeout(()=>{setShowSuccessMessage(false);},3000);// 3秒后自动隐藏\n}return()=>clearTimeout(timer);},[showSuccessMessage]);// 监听年份变化，更新月份\nuseEffect(()=>{if(selectedYear){const fetchMonths=async()=>{const data=await getMonthsByYear(selectedYear);setMonths(data);setSelectedMonth('');setPhases([]);setSelectedPhase('');};fetchMonths();}else{setMonths([]);setPhases([]);}},[selectedYear]);// 监听月份变化，更新阶段\nuseEffect(()=>{if(selectedYear&&selectedMonth){const fetchPhases=async()=>{const data=await getPhasesByYearAndMonth(selectedYear,selectedMonth);setPhases(data);setSelectedPhase('');};fetchPhases();}else if(selectedYear){setPhases([]);}},[selectedYear,selectedMonth]);// 监听输入变化，检查是否存在匹配数据\n// 增加状态，跟踪是否可以删除计划\nconst[isDeletePlanEnabled,setIsDeletePlanEnabled]=useState(false);// 修改监听输入变化的 useEffect，同时检查是否可以删除计划\nuseEffect(()=>{if(yearInput&&monthInput&&phaseInput){const checkExists=async()=>{try{console.log('检查数据是否存在:',yearInput,monthInput,phaseInput);const exists=await checkYearMonthPhaseExists(yearInput,monthInput,phaseInput);console.log('数据存在结果:',exists);// 只有当数据不存在时才启用添加按钮\nsetIsAddPlanEnabled(!exists);// 只有当数据存在时才启用删除按钮\nsetIsDeletePlanEnabled(exists);console.log('添加按钮状态:',!exists);console.log('删除按钮状态:',exists);}catch(error){console.error('检查年月阶段失败:',error);// 发生错误时禁用按钮\nsetIsAddPlanEnabled(false);setIsDeletePlanEnabled(false);}};checkExists();}else{setIsAddPlanEnabled(false);setIsDeletePlanEnabled(false);console.log('输入不完整，禁用按钮');}},[yearInput,monthInput,phaseInput]);// 处理删除计划按钮点击\nconst handleDeletePlan=async()=>{if(isDeletePlanEnabled){try{// 显示确认对话框\nif(window.confirm(`确定要删除 ${yearInput}年${monthInput}月${phaseInput} 计划及其所有任务和步骤吗？`)){// 删除计划\nawait deleteTaskCircle(yearInput,monthInput,phaseInput);// 保存成功信息\nsetSuccessInfo({year:yearInput,month:monthInput,phase:phaseInput});// 设置为删除操作\nsetIsAddOperation(false);setShowSuccessMessage(true);// 通知父组件刷新表格\nif(onTaskCircleChange){onTaskCircleChange('',false);}// 成功后刷新列表\n// 刷新年份列表\nconst yearsData=await getYears();setYears(yearsData);// 如果有选择年份，刷新月份列表\nif(yearInput){const monthsData=await getMonthsByYear(yearInput);setMonths(monthsData);// 如果有选择月份，刷新阶段列表\nif(monthInput){const phasesData=await getPhasesByYearAndMonth(yearInput,monthInput);setPhases(phasesData);}}// 重置输入\nsetYearInput('');setMonthInput('');setPhaseInput('');}}catch(error){console.error('删除计划失败:',error);alert('删除计划失败，请稍后再试。');}}};// 修改渲染部分，添加删除计划按钮\n// 在 return 语句中的适当位置添加\n/*#__PURE__*/_jsx(\"button\",{className:\"delete-plan-button\",onClick:handleDeletePlan,disabled:!isDeletePlanEnabled,children:\"\\u5220\\u9664\\u8BA1\\u5212\"});const handleAddPlan=async()=>{if(isAddPlanEnabled){try{// 创建新计划\nawait createTaskCircle(yearInput,monthInput,phaseInput);// 保存成功信息\nsetSuccessInfo({year:yearInput,month:monthInput,phase:phaseInput});// 设置为添加操作\nsetIsAddOperation(true);setShowSuccessMessage(true);// 成功后获取新计划的task_circle_id并设置\nawait getTaskCircleId(yearInput,monthInput,phaseInput);// 成功后更新按钮状态\nsetIsAddPlanEnabled(false);setIsDeletePlanEnabled(true);// 成功后刷新列表\n// 刷新年份列表\nconst yearsData=await getYears();setYears(yearsData);// 如果有选择年份，刷新月份列表\nif(yearInput){const monthsData=await getMonthsByYear(yearInput);setMonths(monthsData);// 如果有选择月份，刷新阶段列表\nif(monthInput){const phasesData=await getPhasesByYearAndMonth(yearInput,monthInput);setPhases(phasesData);}}}catch(error){console.error('添加计划失败:',error);alert('添加计划失败，请稍后再试。');}}};// 点击空白处关闭下拉菜单\nuseEffect(()=>{const handleClickOutside=event=>{if(yearRef.current&&!yearRef.current.contains(event.target)){setShowYearDropdown(false);}if(monthRef.current&&!monthRef.current.contains(event.target)){setShowMonthDropdown(false);}if(phaseRef.current&&!phaseRef.current.contains(event.target)){setShowPhaseDropdown(false);}};document.addEventListener('mousedown',handleClickOutside);return()=>{document.removeEventListener('mousedown',handleClickOutside);};},[]);// 处理年份选择\n// 添加状态管理\nconst[taskCircleId,setTaskCircleId]=useState('');const[loading,setLoading]=useState(false);// 删除统计数据状态\n// const [stats, setStats] = useState(null);\n// 添加获取 task_circle_id 的函数\nconst getTaskCircleId=async(year,month,phase)=>{try{setLoading(true);if(onTaskCircleChange){onTaskCircleChange('',true);}const response=await fetch(`${BASE_URL}/task_circle/id?year=${year}&month=${month}&phase=${phase}`);const data=await response.json();setTaskCircleId(data.id);// 删除以下几行\n// if (data.id) {\n//   const statsData = await getTaskCircleStats(data.id);\n//   setStats(statsData);\n// }\nif(onTaskCircleChange){onTaskCircleChange(data.id,false);}return data.id;}catch(error){console.error('获取 task_circle_id 失败:',error);if(onTaskCircleChange){onTaskCircleChange('',false);}return'';}finally{setLoading(false);}};// 修改 handleYearSelect、handleMonthSelect、handlePhaseSelect 函数\nconst handleYearSelect=year=>{setSelectedYear(year);setYearInput(year);setShowYearDropdown(false);if(year&&selectedMonth&&selectedPhase){getTaskCircleId(year,selectedMonth,selectedPhase);}};const handleMonthSelect=month=>{setSelectedMonth(month);setMonthInput(month);setShowMonthDropdown(false);if(selectedYear&&month&&selectedPhase){getTaskCircleId(selectedYear,month,selectedPhase);}};const handlePhaseSelect=phase=>{setSelectedPhase(phase);setPhaseInput(phase);setShowPhaseDropdown(false);if(selectedYear&&selectedMonth&&phase){getTaskCircleId(selectedYear,selectedMonth,phase);}};const handleExportExcel=async()=>{if(!taskCircleId)return;try{// 获取当前计划的任务和步骤数据\nconst tasks=await getTasks(taskCircleId);// 准备导出数据（展平任务和步骤关系）\nconst exportData=[];tasks.forEach(task=>{// 检查是否有步骤数组\nif(Array.isArray(task.steps)&&task.steps.length>0){// 有步骤，遍历步骤\ntask.steps.forEach(step=>{exportData.push({'任务名称':task.task_name,'步骤名称':step.task_step,'开始日期':step.startdate||'','截止日期':step.enddate||'','负责人':step.responsibility||'','状态':step.taskstate||'','是否完成':step.iscomplete||'','是否逾期':step.islate||'','优先级':step.priority||'','备注':step.remark||''});});}else{// 没有步骤，添加仅包含任务信息的条目\nexportData.push({'任务名称':task.task_name,'步骤名称':'','开始日期':'','截止日期':'','负责人':'','状态':'','是否完成':'','是否逾期':'','优先级':'','备注':''});}});// 创建工作簿和工作表\nconst worksheet=XLSX.utils.json_to_sheet(exportData);const workbook=XLSX.utils.book_new();XLSX.utils.book_append_sheet(workbook,worksheet,'任务步骤列表');// 生成文件名（当前年月阶段）\nconst fileName=`${yearInput}年${monthInput}月第${phaseInput}阶段任务步骤.xlsx`;// 导出并下载\nXLSX.writeFile(workbook,fileName);}catch(error){console.error('导出Excel失败:',error);alert('导出Excel失败，请稍后再试');}};return/*#__PURE__*/_jsxs(\"div\",{className:\"header-container\",children:[loading&&/*#__PURE__*/_jsx(\"div\",{className:\"loading-overlay\",children:\"\\u52A0\\u8F7D\\u4E2D...\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"title-wrapper\",children:[/*#__PURE__*/_jsxs(\"h2\",{className:\"title\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"dropdown-container\",ref:yearRef,children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"\\u5E74\",value:yearInput,onChange:e=>{setYearInput(e.target.value);setSelectedYear('');},onClick:()=>setShowYearDropdown(!showYearDropdown)}),/*#__PURE__*/_jsx(\"span\",{className:\"label\",children:\"\\u5E74\"}),showYearDropdown&&/*#__PURE__*/_jsx(\"div\",{className:\"dropdown\",children:years.map(year=>/*#__PURE__*/_jsx(\"div\",{className:\"dropdown-item\",onClick:()=>handleYearSelect(year),children:year},year))})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"dropdown-container\",ref:monthRef,children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"\\u6708\",value:monthInput,onChange:e=>{setMonthInput(e.target.value);setSelectedMonth('');},onClick:()=>setShowMonthDropdown(!showMonthDropdown)}),/*#__PURE__*/_jsx(\"span\",{className:\"label\",children:\"\\u6708\"}),showMonthDropdown&&/*#__PURE__*/_jsx(\"div\",{className:\"dropdown\",children:months.map(month=>/*#__PURE__*/_jsx(\"div\",{className:\"dropdown-item\",onClick:()=>handleMonthSelect(month),children:month},month))})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"dropdown-container\",ref:phaseRef,children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"\\u9636\\u6BB5\",value:phaseInput,onChange:e=>{setPhaseInput(e.target.value);setSelectedPhase('');},onClick:()=>setShowPhaseDropdown(!showPhaseDropdown)}),/*#__PURE__*/_jsx(\"span\",{className:\"label\",children:\"\\u9636\\u6BB5\\u9879\\u76EE\\u4EA4\\u4ED8\\u53CA\\u4EA7\\u54C1\\u7814\\u53D1\\u8BA1\\u5212\"}),showPhaseDropdown&&/*#__PURE__*/_jsx(\"div\",{className:\"dropdown\",children:phases.map(phase=>/*#__PURE__*/_jsxs(\"div\",{className:\"dropdown-item\",onClick:()=>handlePhaseSelect(phase),children:[\"\\u7B2C\",phase,\"\\u9636\\u6BB5\"]},phase))})]})]}),showSuccessMessage&&/*#__PURE__*/_jsxs(\"div\",{className:\"success-message\",children:[isAddOperation?'计划添加成功':'计划删除成功',\": \",successInfo.year,\"\\u5E74\",successInfo.month,\"\\u6708 \\u7B2C\",successInfo.phase,\"\\u9636\\u6BB5\"]})]}),/*#__PURE__*/_jsx(\"button\",{className:\"add-plan\",onClick:handleAddPlan,disabled:!isAddPlanEnabled,children:\"\\u589E\\u52A0\\u8BA1\\u5212\"}),/*#__PURE__*/_jsx(\"button\",{className:\"add-plan\",onClick:handleDeletePlan,disabled:!isDeletePlanEnabled,style:{marginLeft:'10px'},children:\"\\u5220\\u9664\\u8BA1\\u5212\"}),/*#__PURE__*/_jsx(\"button\",{className:\"add-plan\",onClick:handleExportExcel,disabled:!isDeletePlanEnabled,style:{marginLeft:'10px'},children:\"\\u5BFC\\u51FA\\u8868\\u683C\"})]});}","map":{"version":3,"names":["React","useState","useEffect","useRef","getYears","getMonthsByYear","getPhasesByYearAndMonth","checkYearMonthPhaseExists","createTaskCircle","deleteTaskCircle","BASE_URL","getTaskCircleStats","XLSX","getTasks","jsx","_jsx","jsxs","_jsxs","Header","_ref","onTaskCircleChange","years","setYears","months","setMonths","phases","setPhases","selectedYear","setSelectedYear","selectedMonth","setSelectedMonth","selectedPhase","setSelectedPhase","yearInput","setYearInput","monthInput","setMonthInput","phaseInput","setPhaseInput","isAddPlanEnabled","setIsAddPlanEnabled","showYearDropdown","setShowYearDropdown","showMonthDropdown","setShowMonthDropdown","showPhaseDropdown","setShowPhaseDropdown","showSuccessMessage","setShowSuccessMessage","successInfo","setSuccessInfo","year","month","phase","isAddOperation","setIsAddOperation","yearRef","monthRef","phaseRef","fetchYears","data","timer","setTimeout","clearTimeout","fetchMonths","fetchPhases","isDeletePlanEnabled","setIsDeletePlanEnabled","checkExists","console","log","exists","error","handleDeletePlan","window","confirm","yearsData","monthsData","phasesData","alert","className","onClick","disabled","children","handleAddPlan","getTaskCircleId","handleClickOutside","event","current","contains","target","document","addEventListener","removeEventListener","taskCircleId","setTaskCircleId","loading","setLoading","response","fetch","json","id","handleYearSelect","handleMonthSelect","handlePhaseSelect","handleExportExcel","tasks","exportData","forEach","task","Array","isArray","steps","length","step","push","task_name","task_step","startdate","enddate","responsibility","taskstate","iscomplete","islate","priority","remark","worksheet","utils","json_to_sheet","workbook","book_new","book_append_sheet","fileName","writeFile","ref","type","placeholder","value","onChange","e","map","style","marginLeft"],"sources":["E:/TraeProjects/DevelopmentDashboard/frontend/src/components/Header.js"],"sourcesContent":["import React from 'react';\r\nimport './Header.css';\r\nimport { useState, useEffect, useRef } from 'react';\r\nimport {\r\n  getYears,\r\n  getMonthsByYear,\r\n  getPhasesByYearAndMonth,\r\n  checkYearMonthPhaseExists,\r\n  createTaskCircle,\r\n  deleteTaskCircle\r\n} from '../services/taskCircleService.js';\r\nimport { BASE_URL, getTaskCircleStats } from '../services/taskService.js';\r\nimport * as XLSX from 'xlsx';\r\nimport { getTasks } from '../services/taskService.js';\r\n\r\nexport default function Header({ onTaskCircleChange }) {\r\n  // 状态管理\r\n  const [years, setYears] = useState([]);\r\n  const [months, setMonths] = useState([]);\r\n  const [phases, setPhases] = useState([]);\r\n  const [selectedYear, setSelectedYear] = useState('');\r\n  const [selectedMonth, setSelectedMonth] = useState('');\r\n  const [selectedPhase, setSelectedPhase] = useState('');\r\n  const [yearInput, setYearInput] = useState('');\r\n  const [monthInput, setMonthInput] = useState('');\r\n  const [phaseInput, setPhaseInput] = useState('');\r\n  const [isAddPlanEnabled, setIsAddPlanEnabled] = useState(false);\r\n  const [showYearDropdown, setShowYearDropdown] = useState(false);\r\n  const [showMonthDropdown, setShowMonthDropdown] = useState(false);\r\n  const [showPhaseDropdown, setShowPhaseDropdown] = useState(false);\r\n  const [showSuccessMessage, setShowSuccessMessage] = useState(false);\r\n  const [successInfo, setSuccessInfo] = useState({ year: '', month: '', phase: '' });\r\n  // 新增：用于区分是添加还是删除操作的状态\r\n  const [isAddOperation, setIsAddOperation] = useState(true);\r\n\r\n  // 引用\r\n  const yearRef = useRef(null);\r\n  const monthRef = useRef(null);\r\n  const phaseRef = useRef(null);\r\n\r\n  // 组件加载时获取年份\r\n  useEffect(() => {\r\n    const fetchYears = async () => {\r\n      const data = await getYears();\r\n      setYears(data);\r\n    };\r\n    fetchYears();\r\n  }, []);\r\n\r\n  // 监听成功消息显示状态\r\n  useEffect(() => {\r\n    let timer;\r\n    if (showSuccessMessage) {\r\n      timer = setTimeout(() => {\r\n        setShowSuccessMessage(false);\r\n      }, 3000); // 3秒后自动隐藏\r\n    }\r\n    return () => clearTimeout(timer);\r\n  }, [showSuccessMessage]);\r\n\r\n  // 监听年份变化，更新月份\r\n  useEffect(() => {\r\n    if (selectedYear) {\r\n      const fetchMonths = async () => {\r\n        const data = await getMonthsByYear(selectedYear);\r\n        setMonths(data);\r\n        setSelectedMonth('');\r\n        setPhases([]);\r\n        setSelectedPhase('');\r\n      };\r\n      fetchMonths();\r\n    } else {\r\n      setMonths([]);\r\n      setPhases([]);\r\n    }\r\n  }, [selectedYear]);\r\n\r\n  // 监听月份变化，更新阶段\r\n  useEffect(() => {\r\n    if (selectedYear && selectedMonth) {\r\n      const fetchPhases = async () => {\r\n        const data = await getPhasesByYearAndMonth(selectedYear, selectedMonth);\r\n        setPhases(data);\r\n        setSelectedPhase('');\r\n      };\r\n      fetchPhases();\r\n    } else if (selectedYear) {\r\n      setPhases([]);\r\n    }\r\n  }, [selectedYear, selectedMonth]);\r\n\r\n  // 监听输入变化，检查是否存在匹配数据\r\n  // 增加状态，跟踪是否可以删除计划\r\n  const [isDeletePlanEnabled, setIsDeletePlanEnabled] = useState(false);\r\n  \r\n  // 修改监听输入变化的 useEffect，同时检查是否可以删除计划\r\n  useEffect(() => {\r\n    if (yearInput && monthInput && phaseInput) {\r\n      const checkExists = async () => {\r\n        try {\r\n          console.log('检查数据是否存在:', yearInput, monthInput, phaseInput);\r\n          const exists = await checkYearMonthPhaseExists(\r\n            yearInput,\r\n            monthInput,\r\n            phaseInput\r\n          );\r\n          console.log('数据存在结果:', exists);\r\n          // 只有当数据不存在时才启用添加按钮\r\n          setIsAddPlanEnabled(!exists);\r\n          // 只有当数据存在时才启用删除按钮\r\n          setIsDeletePlanEnabled(exists);\r\n          console.log('添加按钮状态:', !exists);\r\n          console.log('删除按钮状态:', exists);\r\n        } catch (error) {\r\n          console.error('检查年月阶段失败:', error);\r\n          // 发生错误时禁用按钮\r\n          setIsAddPlanEnabled(false);\r\n          setIsDeletePlanEnabled(false);\r\n        }\r\n      };\r\n      checkExists();\r\n    } else {\r\n      setIsAddPlanEnabled(false);\r\n      setIsDeletePlanEnabled(false);\r\n      console.log('输入不完整，禁用按钮');\r\n    }\r\n  }, [yearInput, monthInput, phaseInput]);\r\n  \r\n  // 处理删除计划按钮点击\r\n  const handleDeletePlan = async () => {\r\n    if (isDeletePlanEnabled) {\r\n      try {\r\n        // 显示确认对话框\r\n        if (window.confirm(`确定要删除 ${yearInput}年${monthInput}月${phaseInput} 计划及其所有任务和步骤吗？`)) {\r\n          // 删除计划\r\n          await deleteTaskCircle(yearInput, monthInput, phaseInput);\r\n          \r\n          // 保存成功信息\r\n          setSuccessInfo({\r\n            year: yearInput,\r\n            month: monthInput,\r\n            phase: phaseInput\r\n          });\r\n          // 设置为删除操作\r\n          setIsAddOperation(false);\r\n          setShowSuccessMessage(true);\r\n          \r\n          // 通知父组件刷新表格\r\n          if (onTaskCircleChange) {\r\n            onTaskCircleChange('', false);\r\n          }\r\n          \r\n          // 成功后刷新列表\r\n          // 刷新年份列表\r\n          const yearsData = await getYears();\r\n          setYears(yearsData);\r\n          \r\n          // 如果有选择年份，刷新月份列表\r\n          if (yearInput) {\r\n            const monthsData = await getMonthsByYear(yearInput);\r\n            setMonths(monthsData);\r\n            \r\n            // 如果有选择月份，刷新阶段列表\r\n            if (monthInput) {\r\n              const phasesData = await getPhasesByYearAndMonth(yearInput, monthInput);\r\n              setPhases(phasesData);\r\n            }\r\n          }\r\n          \r\n          // 重置输入\r\n          setYearInput('');\r\n          setMonthInput('');\r\n          setPhaseInput('');\r\n        }\r\n      } catch (error) {\r\n        console.error('删除计划失败:', error);\r\n        alert('删除计划失败，请稍后再试。');\r\n      }\r\n    }\r\n  };\r\n  \r\n  // 修改渲染部分，添加删除计划按钮\r\n  // 在 return 语句中的适当位置添加\r\n  <button\r\n    className=\"delete-plan-button\"\r\n    onClick={handleDeletePlan}\r\n    disabled={!isDeletePlanEnabled}\r\n  >\r\n    删除计划\r\n  </button>\r\n    const handleAddPlan = async () => {\r\n      if (isAddPlanEnabled) {\r\n        try {\r\n          // 创建新计划\r\n          await createTaskCircle(yearInput, monthInput, phaseInput);\r\n          \r\n          // 保存成功信息\r\n          setSuccessInfo({\r\n            year: yearInput,\r\n            month: monthInput,\r\n            phase: phaseInput\r\n          });\r\n          // 设置为添加操作\r\n          setIsAddOperation(true);\r\n          setShowSuccessMessage(true);\r\n          \r\n          // 成功后获取新计划的task_circle_id并设置\r\n          await getTaskCircleId(yearInput, monthInput, phaseInput);\r\n          \r\n          // 成功后更新按钮状态\r\n          setIsAddPlanEnabled(false);\r\n          setIsDeletePlanEnabled(true);\r\n          \r\n          // 成功后刷新列表\r\n          // 刷新年份列表\r\n          const yearsData = await getYears();\r\n          setYears(yearsData);\r\n          \r\n          // 如果有选择年份，刷新月份列表\r\n          if (yearInput) {\r\n            const monthsData = await getMonthsByYear(yearInput);\r\n            setMonths(monthsData);\r\n            \r\n            // 如果有选择月份，刷新阶段列表\r\n            if (monthInput) {\r\n              const phasesData = await getPhasesByYearAndMonth(yearInput, monthInput);\r\n              setPhases(phasesData);\r\n            }\r\n          }\r\n        } catch (error) {\r\n          console.error('添加计划失败:', error);\r\n          alert('添加计划失败，请稍后再试。');\r\n        }\r\n      }\r\n    };\r\n\r\n    // 点击空白处关闭下拉菜单\r\n    useEffect(() => {\r\n      const handleClickOutside = (event) => {\r\n        if (\r\n          yearRef.current && !yearRef.current.contains(event.target)\r\n        ) {\r\n          setShowYearDropdown(false);\r\n        }\r\n        if (\r\n          monthRef.current && !monthRef.current.contains(event.target)\r\n        ) {\r\n          setShowMonthDropdown(false);\r\n        }\r\n        if (\r\n          phaseRef.current && !phaseRef.current.contains(event.target)\r\n        ) {\r\n          setShowPhaseDropdown(false);\r\n        }\r\n      };\r\n    \r\n      document.addEventListener('mousedown', handleClickOutside);\r\n      return () => {\r\n        document.removeEventListener('mousedown', handleClickOutside);\r\n      };\r\n    }, []);\r\n\r\n    // 处理年份选择\r\n    // 添加状态管理\r\n    const [taskCircleId, setTaskCircleId] = useState('');\r\n    const [loading, setLoading] = useState(false);\r\n    // 删除统计数据状态\r\n    // const [stats, setStats] = useState(null);\r\n\r\n    // 添加获取 task_circle_id 的函数\r\n    const getTaskCircleId = async (year, month, phase) => {\r\n      try {\r\n        setLoading(true);\r\n        if (onTaskCircleChange) {\r\n          onTaskCircleChange('', true);\r\n        }\r\n        const response = await fetch(`${BASE_URL}/task_circle/id?year=${year}&month=${month}&phase=${phase}`);\r\n        const data = await response.json();\r\n        setTaskCircleId(data.id);\r\n        \r\n        // 删除以下几行\r\n        // if (data.id) {\r\n        //   const statsData = await getTaskCircleStats(data.id);\r\n        //   setStats(statsData);\r\n        // }\r\n        \r\n        if (onTaskCircleChange) {\r\n          onTaskCircleChange(data.id, false);\r\n        }\r\n        return data.id;\r\n      } catch (error) {\r\n        console.error('获取 task_circle_id 失败:', error);\r\n        if (onTaskCircleChange) {\r\n          onTaskCircleChange('', false);\r\n        }\r\n        return '';\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    // 修改 handleYearSelect、handleMonthSelect、handlePhaseSelect 函数\r\n    const handleYearSelect = (year) => {\r\n      setSelectedYear(year);\r\n      setYearInput(year);\r\n      setShowYearDropdown(false);\r\n      if (year && selectedMonth && selectedPhase) {\r\n        getTaskCircleId(year, selectedMonth, selectedPhase);\r\n      }\r\n    };\r\n\r\n    const handleMonthSelect = (month) => {\r\n      setSelectedMonth(month);\r\n      setMonthInput(month);\r\n      setShowMonthDropdown(false);\r\n      if (selectedYear && month && selectedPhase) {\r\n        getTaskCircleId(selectedYear, month, selectedPhase);\r\n      }\r\n    };\r\n\r\n    const handlePhaseSelect = (phase) => {\r\n      setSelectedPhase(phase);\r\n      setPhaseInput(phase);\r\n      setShowPhaseDropdown(false);\r\n      if (selectedYear && selectedMonth && phase) {\r\n        getTaskCircleId(selectedYear, selectedMonth, phase);\r\n      }\r\n    };\r\n\r\n    const handleExportExcel = async () => {\r\n      if (!taskCircleId) return;\r\n\r\n      try {\r\n        // 获取当前计划的任务和步骤数据\r\n        const tasks = await getTasks(taskCircleId);\r\n\r\n        // 准备导出数据（展平任务和步骤关系）\r\n        const exportData = [];\r\n        tasks.forEach(task => {\r\n          // 检查是否有步骤数组\r\n          if (Array.isArray(task.steps) && task.steps.length > 0) {\r\n            // 有步骤，遍历步骤\r\n            task.steps.forEach(step => {\r\n              exportData.push({\r\n                '任务名称': task.task_name,\r\n                '步骤名称': step.task_step,\r\n                '开始日期': step.startdate || '',\r\n                '截止日期': step.enddate || '',\r\n                '负责人': step.responsibility || '',\r\n                '状态': step.taskstate || '',\r\n                '是否完成': step.iscomplete || '',\r\n                '是否逾期': step.islate || '',\r\n                '优先级': step.priority || '',\r\n                '备注': step.remark || ''\r\n              });\r\n            });\r\n          } else {\r\n            // 没有步骤，添加仅包含任务信息的条目\r\n            exportData.push({\r\n              '任务名称': task.task_name,\r\n              '步骤名称': '',\r\n              '开始日期': '',\r\n              '截止日期': '',\r\n              '负责人': '',\r\n              '状态': '',\r\n              '是否完成': '',\r\n              '是否逾期': '',\r\n              '优先级': '',\r\n              '备注': ''\r\n            });\r\n          }\r\n        });\r\n\r\n        // 创建工作簿和工作表\r\n        const worksheet = XLSX.utils.json_to_sheet(exportData);\r\n        const workbook = XLSX.utils.book_new();\r\n        XLSX.utils.book_append_sheet(workbook, worksheet, '任务步骤列表');\r\n\r\n        // 生成文件名（当前年月阶段）\r\n        const fileName = `${yearInput}年${monthInput}月第${phaseInput}阶段任务步骤.xlsx`;\r\n\r\n        // 导出并下载\r\n        XLSX.writeFile(workbook, fileName);\r\n      } catch (error) {\r\n        console.error('导出Excel失败:', error);\r\n        alert('导出Excel失败，请稍后再试');\r\n      }\r\n    };\r\n\r\n    return (\r\n      <div className=\"header-container\">\r\n        {loading && <div className=\"loading-overlay\">加载中...</div>}\r\n        <div className=\"title-wrapper\">\r\n          <h2 className=\"title\">\r\n            <div className=\"dropdown-container\" ref={yearRef}>\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"年\"\r\n                value={yearInput}\r\n                onChange={(e) => {\r\n                  setYearInput(e.target.value);\r\n                  setSelectedYear('');\r\n                }}\r\n                onClick={() => setShowYearDropdown(!showYearDropdown)}\r\n              />\r\n              <span className=\"label\">年</span>\r\n              {showYearDropdown && (\r\n                <div className=\"dropdown\">\r\n                  {years.map((year) => (\r\n                    <div\r\n                      key={year}\r\n                      className=\"dropdown-item\"\r\n                      onClick={() => handleYearSelect(year)}\r\n                    >\r\n                      {year}\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              )}\r\n            </div>\r\n            <div className=\"dropdown-container\" ref={monthRef}>\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"月\"\r\n                value={monthInput}\r\n                onChange={(e) => {\r\n                  setMonthInput(e.target.value);\r\n                  setSelectedMonth('');\r\n                }}\r\n                onClick={() => setShowMonthDropdown(!showMonthDropdown)}\r\n              />\r\n              <span className=\"label\">月</span>\r\n              {showMonthDropdown && (\r\n                <div className=\"dropdown\">\r\n                  {months.map((month) => (\r\n                    <div\r\n                      key={month}\r\n                      className=\"dropdown-item\"\r\n                      onClick={() => handleMonthSelect(month)}\r\n                    >\r\n                      {month}\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              )}\r\n            </div>\r\n            <div className=\"dropdown-container\" ref={phaseRef}>\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"阶段\"\r\n                value={phaseInput}\r\n                onChange={(e) => {\r\n                  setPhaseInput(e.target.value);\r\n                  setSelectedPhase('');\r\n                }}\r\n                onClick={() => setShowPhaseDropdown(!showPhaseDropdown)}\r\n              />\r\n              <span className=\"label\">阶段项目交付及产品研发计划</span>\r\n              {showPhaseDropdown && (\r\n                <div className=\"dropdown\">\r\n                  {phases.map((phase) => (\r\n                    <div\r\n                      key={phase}\r\n                      className=\"dropdown-item\"\r\n                      onClick={() => handlePhaseSelect(phase)}\r\n                    >\r\n                      第{phase}阶段\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              )}\r\n            </div>\r\n          </h2>\r\n          {/* 显示成功信息 */}\r\n          {showSuccessMessage && (\r\n            <div className=\"success-message\">\r\n              {isAddOperation ? '计划添加成功' : '计划删除成功'}: {successInfo.year}年{successInfo.month}月 第{successInfo.phase}阶段\r\n            </div>\r\n          )}\r\n        </div>\r\n        <button\r\n          className=\"add-plan\"\r\n          onClick={handleAddPlan}\r\n          disabled={!isAddPlanEnabled}\r\n        >\r\n          增加计划\r\n        </button>\r\n        <button\r\n          className=\"add-plan\"\r\n          onClick={handleDeletePlan}\r\n          disabled={!isDeletePlanEnabled}\r\n          style={{ marginLeft: '10px' }}\r\n        >\r\n          删除计划\r\n        </button>\r\n        {/* 添加导出按钮 */}\r\n        <button\r\n          className=\"add-plan\"\r\n          onClick={handleExportExcel}\r\n          disabled={!isDeletePlanEnabled}\r\n          style={{ marginLeft: '10px' }}\r\n        >\r\n          导出表格\r\n        </button>\r\n      </div>\r\n    );\r\n}\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}